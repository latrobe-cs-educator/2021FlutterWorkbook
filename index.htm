<!DOCTYPE html>
<html dir="ltr" xml:lang="en" class="yui3-js-enabled" lang="en"><head>
        <title>Week 8 Lecture Workbook</title>
    <!-- Start Matomo Code -->

<script type="text/javascript" async="" defer="defer" src="Week%208%20Lecture%20Workbook_files/piwik.js"></script><script type="text/javascript">
    var _paq = _paq || [];
    
    _paq.push(['setUserId', '243568']);
    _paq.push(['trackPageView']);
    _paq.push(['enableLinkTracking']);
    _paq.push(['enableHeartBeatTimer', 30]);

    function embedTrackingCode() {
        var u='//catalyst-analytics.net/';
        var p='//catalyst-analytics.net/';

        _paq.push(['setTrackerUrl', u+'piwik.php']);
        _paq.push(['setSiteId', 3]);
        var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
        g.type='text/javascript'; g.async=true; g.defer=true; g.src=p+'piwik.js'; s.parentNode.insertBefore(g,s);
    }

    if (window.addEventListener) {
        window.addEventListener("load", embedTrackingCode, false);
    } else if (window.attachEvent) {
        window.attachEvent("onload", embedTrackingCode);
    } else {
        embedTrackingCode();
    }
</script>
<!-- End Matomo Code --><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="keywords" content="moodle, Week 8 Lecture Workbook">
<link rel="stylesheet" type="text/css" href="Week%208%20Lecture%20Workbook_files/yui_combo_002.css"><link charset="utf-8" rel="stylesheet" id="yui_3_17_2_1_1633288038208_8" href="Week%208%20Lecture%20Workbook_files/yui_combo.css"><script charset="utf-8" id="yui_3_17_2_1_1633288038208_9" src="Week%208%20Lecture%20Workbook_files/yui_combo_002.php" async=""></script><script charset="utf-8" id="yui_3_17_2_1_1633288038208_26" src="Week%208%20Lecture%20Workbook_files/yui_combo_004.php" async=""></script><script charset="utf-8" id="yui_3_17_2_1_1633288038208_29" src="Week%208%20Lecture%20Workbook_files/yui_combo.php" async=""></script><script id="firstthemesheet" type="text/css">/** Required in order to fix style inclusion problems in IE with YUI **/</script><link rel="stylesheet" type="text/css" href="Week%208%20Lecture%20Workbook_files/all.css">
<link rel="stylesheet" type="text/css" href="Week%208%20Lecture%20Workbook_files/print.css">
<script>
//<![CDATA[
var M = {}; M.yui = {};
M.pageloadstarttime = new Date();
M.cfg = {"wwwroot":"https:\/\/lms.latrobe.edu.au","sesskey":"TCTaH6IzhU","sessiontimeout":"14400","themerev":"1632950971","slasharguments":1,"theme":"latrobe","iconsystemmodule":"core\/icon_system_fontawesome","jsrev":"1632949907","admin":"admin","svgicons":true,"usertimezone":"Australia\/Melbourne","contextid":6855273,"langrev":1633280975,"templaterev":"1632949907"};var yui1ConfigFn = function(me) {if(/-skin|reset|fonts|grids|base/.test(me.name)){me.type='css';me.path=me.path.replace(/\.js/,'.css');me.path=me.path.replace(/\/yui2-skin/,'/assets/skins/sam/yui2-skin')}};
var yui2ConfigFn = function(me) {var parts=me.name.replace(/^moodle-/,'').split('-'),component=parts.shift(),module=parts[0],min='-min';if(/-(skin|core)$/.test(me.name)){parts.pop();me.type='css';min=''}
if(module){var filename=parts.join('-');me.path=component+'/'+module+'/'+filename+min+'.'+me.type}else{me.path=component+'/'+component+'.'+me.type}};
YUI_config = {"debug":false,"base":"https:\/\/lms.latrobe.edu.au\/lib\/yuilib\/3.17.2\/","comboBase":"https:\/\/lms.latrobe.edu.au\/theme\/yui_combo.php?","combine":true,"filter":null,"insertBefore":"firstthemesheet","groups":{"yui2":{"base":"https:\/\/lms.latrobe.edu.au\/lib\/yuilib\/2in3\/2.9.0\/build\/","comboBase":"https:\/\/lms.latrobe.edu.au\/theme\/yui_combo.php?","combine":true,"ext":false,"root":"2in3\/2.9.0\/build\/","patterns":{"yui2-":{"group":"yui2","configFn":yui1ConfigFn}}},"moodle":{"name":"moodle","base":"https:\/\/lms.latrobe.edu.au\/theme\/yui_combo.php?m\/1632949907\/","combine":true,"comboBase":"https:\/\/lms.latrobe.edu.au\/theme\/yui_combo.php?","ext":false,"root":"m\/1632949907\/","patterns":{"moodle-":{"group":"moodle","configFn":yui2ConfigFn}},"filter":null,"modules":{"moodle-core-popuphelp":{"requires":["moodle-core-tooltip"]},"moodle-core-handlebars":{"condition":{"trigger":"handlebars","when":"after"}},"moodle-core-dragdrop":{"requires":["base","node","io","dom","dd","event-key","event-focus","moodle-core-notification"]},"moodle-core-tooltip":{"requires":["base","node","io-base","moodle-core-notification-dialogue","json-parse","widget-position","widget-position-align","event-outside","cache-base"]},"moodle-core-blocks":{"requires":["base","node","io","dom","dd","dd-scroll","moodle-core-dragdrop","moodle-core-notification"]},"moodle-core-actionmenu":{"requires":["base","event","node-event-simulate"]},"moodle-core-lockscroll":{"requires":["plugin","base-build"]},"moodle-core-event":{"requires":["event-custom"]},"moodle-core-notification":{"requires":["moodle-core-notification-dialogue","moodle-core-notification-alert","moodle-core-notification-confirm","moodle-core-notification-exception","moodle-core-notification-ajaxexception"]},"moodle-core-notification-dialogue":{"requires":["base","node","panel","escape","event-key","dd-plugin","moodle-core-widget-focusafterclose","moodle-core-lockscroll"]},"moodle-core-notification-alert":{"requires":["moodle-core-notification-dialogue"]},"moodle-core-notification-confirm":{"requires":["moodle-core-notification-dialogue"]},"moodle-core-notification-exception":{"requires":["moodle-core-notification-dialogue"]},"moodle-core-notification-ajaxexception":{"requires":["moodle-core-notification-dialogue"]},"moodle-core-languninstallconfirm":{"requires":["base","node","moodle-core-notification-confirm","moodle-core-notification-alert"]},"moodle-core-formchangechecker":{"requires":["base","event-focus","moodle-core-event"]},"moodle-core-maintenancemodetimer":{"requires":["base","node"]},"moodle-core-chooserdialogue":{"requires":["base","panel","moodle-core-notification"]},"moodle-core_availability-form":{"requires":["base","node","event","event-delegate","panel","moodle-core-notification-dialogue","json"]},"moodle-backup-backupselectall":{"requires":["node","event","node-event-simulate","anim"]},"moodle-backup-confirmcancel":{"requires":["node","node-event-simulate","moodle-core-notification-confirm"]},"moodle-course-formatchooser":{"requires":["base","node","node-event-simulate"]},"moodle-course-util":{"requires":["node"],"use":["moodle-course-util-base"],"submodules":{"moodle-course-util-base":{},"moodle-course-util-section":{"requires":["node","moodle-course-util-base"]},"moodle-course-util-cm":{"requires":["node","moodle-course-util-base"]}}},"moodle-course-dragdrop":{"requires":["base","node","io","dom","dd","dd-scroll","moodle-core-dragdrop","moodle-core-notification","moodle-course-coursebase","moodle-course-util"]},"moodle-course-management":{"requires":["base","node","io-base","moodle-core-notification-exception","json-parse","dd-constrain","dd-proxy","dd-drop","dd-delegate","node-event-delegate"]},"moodle-course-categoryexpander":{"requires":["node","event-key"]},"moodle-form-shortforms":{"requires":["node","base","selector-css3","moodle-core-event"]},"moodle-form-dateselector":{"requires":["base","node","overlay","calendar"]},"moodle-form-passwordunmask":{"requires":[]},"moodle-question-chooser":{"requires":["moodle-core-chooserdialogue"]},"moodle-question-searchform":{"requires":["base","node"]},"moodle-question-preview":{"requires":["base","dom","event-delegate","event-key","core_question_engine"]},"moodle-availability_completion-form":{"requires":["base","node","event","moodle-core_availability-form"]},"moodle-availability_date-form":{"requires":["base","node","event","io","moodle-core_availability-form"]},"moodle-availability_grade-form":{"requires":["base","node","event","moodle-core_availability-form"]},"moodle-availability_group-form":{"requires":["base","node","event","moodle-core_availability-form"]},"moodle-availability_grouping-form":{"requires":["base","node","event","moodle-core_availability-form"]},"moodle-availability_profile-form":{"requires":["base","node","event","moodle-core_availability-form"]},"moodle-mod_aspirelists-inline_display":{"requires":["base","node","event","event-delegate"]},"moodle-mod_assign-history":{"requires":["node","transition"]},"moodle-mod_attendance-groupfilter":{"requires":["base","node"]},"moodle-mod_oublog-tagselector":{"requires":["base","node","autocomplete","autocomplete-filters","autocomplete-highlighters"]},"moodle-mod_oublog-savecheck":{"requires":["base","node","io","panel","moodle-core-notification-alert"]},"moodle-mod_quiz-util":{"requires":["node","moodle-core-actionmenu"],"use":["moodle-mod_quiz-util-base"],"submodules":{"moodle-mod_quiz-util-base":{},"moodle-mod_quiz-util-slot":{"requires":["node","moodle-mod_quiz-util-base"]},"moodle-mod_quiz-util-page":{"requires":["node","moodle-mod_quiz-util-base"]}}},"moodle-mod_quiz-toolboxes":{"requires":["base","node","event","event-key","io","moodle-mod_quiz-quizbase","moodle-mod_quiz-util-slot","moodle-core-notification-ajaxexception"]},"moodle-mod_quiz-dragdrop":{"requires":["base","node","io","dom","dd","dd-scroll","moodle-core-dragdrop","moodle-core-notification","moodle-mod_quiz-quizbase","moodle-mod_quiz-util-base","moodle-mod_quiz-util-page","moodle-mod_quiz-util-slot","moodle-course-util"]},"moodle-mod_quiz-modform":{"requires":["base","node","event"]},"moodle-mod_quiz-autosave":{"requires":["base","node","event","event-valuechange","node-event-delegate","io-form"]},"moodle-mod_quiz-questionchooser":{"requires":["moodle-core-chooserdialogue","moodle-mod_quiz-util","querystring-parse"]},"moodle-mod_quiz-quizbase":{"requires":["base","node"]},"moodle-message_airnotifier-toolboxes":{"requires":["base","node","io"]},"moodle-filter_glossary-autolinker":{"requires":["base","node","io-base","json-parse","event-delegate","overlay","moodle-core-event","moodle-core-notification-alert","moodle-core-notification-exception","moodle-core-notification-ajaxexception"]},"moodle-filter_mathjaxloader-loader":{"requires":["moodle-core-event"]},"moodle-editor_atto-rangy":{"requires":[]},"moodle-editor_atto-editor":{"requires":["node","transition","io","overlay","escape","event","event-simulate","event-custom","node-event-html5","node-event-simulate","yui-throttle","moodle-core-notification-dialogue","moodle-core-notification-confirm","moodle-editor_atto-rangy","handlebars","timers","querystring-stringify"]},"moodle-editor_atto-plugin":{"requires":["node","base","escape","event","event-outside","handlebars","event-custom","timers","moodle-editor_atto-menu"]},"moodle-editor_atto-menu":{"requires":["moodle-core-notification-dialogue","node","event","event-custom"]},"moodle-format_grid-gridkeys":{"requires":["event-nav-keys"]},"moodle-report_eventlist-eventfilter":{"requires":["base","event","node","node-event-delegate","datatable","autocomplete","autocomplete-filters"]},"moodle-report_loglive-fetchlogs":{"requires":["base","event","node","io","node-event-delegate"]},"moodle-gradereport_grader-gradereporttable":{"requires":["base","node","event","handlebars","overlay","event-hover"]},"moodle-gradereport_history-userselector":{"requires":["escape","event-delegate","event-key","handlebars","io-base","json-parse","moodle-core-notification-dialogue"]},"moodle-tool_capability-search":{"requires":["base","node"]},"moodle-tool_lp-dragdrop-reorder":{"requires":["moodle-core-dragdrop"]},"moodle-tool_monitor-dropdown":{"requires":["base","event","node"]},"moodle-assignfeedback_editpdf-editor":{"requires":["base","event","node","io","graphics","json","event-move","event-resize","transition","querystring-stringify-simple","moodle-core-notification-dialog","moodle-core-notification-alert","moodle-core-notification-warning","moodle-core-notification-exception","moodle-core-notification-ajaxexception"]},"moodle-atto_accessibilitychecker-button":{"requires":["color-base","moodle-editor_atto-plugin"]},"moodle-atto_accessibilityhelper-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_align-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_bold-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_charmap-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_clear-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_collapse-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_count-button":{"requires":["io","json-parse","moodle-editor_atto-plugin"]},"moodle-atto_echo360attoplugin-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_emojipicker-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_emoticon-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_equation-button":{"requires":["moodle-editor_atto-plugin","moodle-core-event","io","event-valuechange","tabview","array-extras"]},"moodle-atto_fullscreen-button":{"requires":["event-resize","moodle-editor_atto-plugin"]},"moodle-atto_h5p-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_html-codemirror":{"requires":["moodle-atto_html-codemirror-skin"]},"moodle-atto_html-beautify":{},"moodle-atto_html-button":{"requires":["promise","moodle-editor_atto-plugin","moodle-atto_html-beautify","moodle-atto_html-codemirror","event-valuechange"]},"moodle-atto_htmlplus-codemirror":{"requires":["moodle-atto_htmlplus-codemirror-skin"]},"moodle-atto_htmlplus-beautify":{},"moodle-atto_htmlplus-button":{"requires":["moodle-editor_atto-plugin","moodle-atto_htmlplus-beautify","moodle-atto_htmlplus-codemirror","event-valuechange"]},"moodle-atto_image-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_indent-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_italic-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_link-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_managefiles-usedfiles":{"requires":["node","escape"]},"moodle-atto_managefiles-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_media-button":{"requires":["moodle-editor_atto-plugin","moodle-form-shortforms"]},"moodle-atto_noautolink-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_orderedlist-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_preview-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_recordrtc-button":{"requires":["moodle-editor_atto-plugin","moodle-atto_recordrtc-recording"]},"moodle-atto_recordrtc-recording":{"requires":["moodle-atto_recordrtc-button"]},"moodle-atto_rtl-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_sketch-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_strike-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_styles-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_subscript-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_superscript-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_table-button":{"requires":["moodle-editor_atto-plugin","moodle-editor_atto-menu","event","event-valuechange"]},"moodle-atto_title-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_underline-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_undo-button":{"requires":["moodle-editor_atto-plugin"]},"moodle-atto_unorderedlist-button":{"requires":["moodle-editor_atto-plugin"]}}},"gallery":{"name":"gallery","base":"https:\/\/lms.latrobe.edu.au\/lib\/yuilib\/gallery\/","combine":true,"comboBase":"https:\/\/lms.latrobe.edu.au\/theme\/yui_combo.php?","ext":false,"root":"gallery\/1632949907\/","patterns":{"gallery-":{"group":"gallery"}}}},"modules":{"core_filepicker":{"name":"core_filepicker","fullpath":"https:\/\/lms.latrobe.edu.au\/lib\/javascript.php\/1632949907\/repository\/filepicker.js","requires":["base","node","node-event-simulate","json","async-queue","io-base","io-upload-iframe","io-form","yui2-treeview","panel","cookie","datatable","datatable-sort","resize-plugin","dd-plugin","escape","moodle-core_filepicker","moodle-core-notification-dialogue"]},"core_comment":{"name":"core_comment","fullpath":"https:\/\/lms.latrobe.edu.au\/lib\/javascript.php\/1632949907\/comment\/comment.js","requires":["base","io-base","node","json","yui2-animation","overlay","escape"]},"mathjax":{"name":"mathjax","fullpath":"https:\/\/cdn.jsdelivr.net\/npm\/mathjax@2.7.8\/MathJax.js?delayStartupUntil=configured"}}};
M.yui.loader = {modules: {}};

//]]>
</script>

<!-- Moodle Mobile validation-->
<meta name="moodle-validation" content="7ca64e30d674e0935f1a3264cd0432ad">
<!-- End Moodle Mobile validation-->
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- favicon -->
    <link rel="apple-touch-icon" sizes="57x57" href="https://lms.latrobe.edu.au/theme/latrobe/pix/apple-touch-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="https://lms.latrobe.edu.au/theme/latrobe/pix/apple-touch-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="https://lms.latrobe.edu.au/theme/latrobe/pix/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="https://lms.latrobe.edu.au/theme/latrobe/pix/apple-touch-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="https://lms.latrobe.edu.au/theme/latrobe/pix/apple-touch-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="https://lms.latrobe.edu.au/theme/latrobe/pix/apple-touch-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="https://lms.latrobe.edu.au/theme/latrobe/pix/apple-touch-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="https://lms.latrobe.edu.au/theme/latrobe/pix/apple-touch-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="https://lms.latrobe.edu.au/theme/latrobe/pix/apple-touch-icon-180x180.png">
    <link rel="icon" type="image/png" href="https://lms.latrobe.edu.au/theme/latrobe/pix/favicon-32x32.png" sizes="32x32">
    <link rel="icon" type="image/png" href="https://lms.latrobe.edu.au/theme/latrobe/pix/favicon-194x194.png" sizes="194x194">
    <link rel="icon" type="image/png" href="https://lms.latrobe.edu.au/theme/latrobe/pix/favicon-96x96.png" sizes="96x96">
    <link rel="icon" type="image/png" href="https://lms.latrobe.edu.au/theme/latrobe/pix/android-chrome-192x192.png" sizes="192x192">
    <link rel="icon" type="image/png" href="https://lms.latrobe.edu.au/theme/latrobe/pix/favicon-16x16.png" sizes="16x16">
    <link href="Week%208%20Lecture%20Workbook_files/css.css" rel="stylesheet">
<script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="core/first" src="Week%208%20Lecture%20Workbook_files/first.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="core/event" src="Week%208%20Lecture%20Workbook_files/event.js"></script><script type="text/x-mathjax-config">MathJax.Hub.Config({
    config: ["TeX-MML-AM_CHTML.js", "Safe.js"],
    errorSettings: { message: ["!"] },
    skipStartupTypeset: true,
    messageStyle: "none"
});
</script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="jquery" src="Week%208%20Lecture%20Workbook_files/jquery-3.js"></script></head>

<body id="page-mod-book-print" class="format-grid path-mod path-mod-book gecko dir-ltr lang-en yui-skin-sam yui3-skin-sam lms-latrobe-edu-au pagelayout-embedded course-101689 context-6855273 cmid-4822307 category-34 category-25 jsenabled scrolled">
<div class="toast-wrapper mx-auto py-0 fixed-top" role="status" aria-live="polite"></div>

<div>
    <a class="sr-only sr-only-focusable" href="#maincontent">Skip to main content</a>
</div><script src="Week%208%20Lecture%20Workbook_files/polyfill.js"></script>
<script src="Week%208%20Lecture%20Workbook_files/polyfill_002.js"></script>
<script src="Week%208%20Lecture%20Workbook_files/yui_combo_003.php"></script><div id="yui3-css-stamp" style="position: absolute !important; visibility: hidden !important" class=""></div><script src="Week%208%20Lecture%20Workbook_files/javascript-static.js"></script>
<script>
//<![CDATA[
document.body.className += ' jsenabled';
//]]>
</script>


<div id="page">
    <div id="page-content" class="d-block">
        <div role="main"><span id="user-notifications"></span><span id="maincontent"></span><div class="book p-4">
    <div class="text-right"><a onclick="window.print();return false;" class="hidden-print" href="#"><img class="icon icon" alt="Print book" title="Print book" src="Week%208%20Lecture%20Workbook_files/book.svg">Print book</a></div>
    <div class="text-center p-b-1 book_title"><h1>Week 8 Lecture Workbook</h1></div>
    <div class="book_info w-100 p-t-3 d-inline-block">
        <div class="w-50 float-left">
            <table>
                <tbody><tr>
                    <td>
                        Site:
                    </td>
                    <td class="p-l-1">
                        <a href="https://lms.latrobe.edu.au/">La Trobe University</a>
                    </td>
                </tr>
                <tr>
                    <td>
                        Subject:
                    </td>
                    <td class="p-l-1">
                        2022-CSE3MAD(OL-1) - Mobile Application Development (Cohort to be added)
                    </td>
                </tr>
                <tr>
                    <td>
                        Book:
                    </td>
                    <td class="p-l-1">
                        Week 8 Lecture Workbook
                    </td>
                </tr>
            </tbody></table>
        </div>
        <div class="w-50 float-left">
            <table class="float-right">
                <tbody><tr>
                    <td>
                        Printed by:
                    </td>
                    <td class="p-l-1">
                        Marita Fitzgerald
                    </td>
                </tr>
                <tr>
                    <td>
                        Date:
                    </td>
                    <td class="p-l-1">
                        Monday, 4 October 2021, 6:07 AM
                    </td>
                </tr>
            </tbody></table>
        </div>
    </div>
    <div class="w-100">
        <div class="p-b-2 p-t-2"><div class="book_toc_numbered"><a name="toc"></a><h2 class="text-center p-b-2">Table of contents</h2><ul><li><a title="1. Introduction" class="font-weight-bold text-decoration-none" href="#ch566260">1. Introduction</a></li><li><a title="2. Cross-Platform Development" class="font-weight-bold text-decoration-none" href="#ch632120">2. Cross-Platform Development</a></li><li><a title="3. Cross-Platform Framework Comparison" class="font-weight-bold text-decoration-none" href="#ch633504">3. Cross-Platform Framework Comparison</a></li><li><a title="4. Introduction to Flutter" class="font-weight-bold text-decoration-none" href="#ch632121">4. Introduction to Flutter</a></li><li><a title="5. Dart Quickstart" class="font-weight-bold text-decoration-none" href="#ch632122">5. Dart Quickstart</a><ul><li><a title="5.1. Numbers" class="text-decoration-none" href="#ch637212">5.1. Numbers</a></li><li><a title="5.2. Strings" class="text-decoration-none" href="#ch637299">5.2. Strings</a></li><li><a title="5.3. Booleans" class="text-decoration-none" href="#ch637213">5.3. Booleans</a></li><li><a title="5.4. Lists" class="text-decoration-none" href="#ch637214">5.4. Lists</a></li><li><a title="5.5. Dynamic Variables" class="text-decoration-none" href="#ch637215">5.5. Dynamic Variables</a></li><li><a title="5.6. Set" class="text-decoration-none" href="#ch637216">5.6. Set</a></li><li><a title="5.7. Maps" class="text-decoration-none" href="#ch637217">5.7. Maps</a></li><li><a title="5.8. Keywords" class="text-decoration-none" href="#ch637332">5.8. Keywords</a></li><li><a title="5.9. Operators" class="text-decoration-none" href="#ch637373">5.9. Operators</a></li><li><a title="5.10. Functions" class="text-decoration-none" href="#ch637218">5.10. Functions</a></li></ul></li><li><a title="6. Flutter Widgets" class="font-weight-bold text-decoration-none" href="#ch633802">6. Flutter Widgets</a></li><li><a title="7. Flutter Layout" class="font-weight-bold text-decoration-none" href="#ch633801">7. Flutter Layout</a></li><li><a title="8. Flutter Lab Activity" class="font-weight-bold text-decoration-none" href="#ch633803">8. Flutter Lab Activity</a></li></ul></div></div>
    </div>
    <div class="w-100">
            <div class="p-b-2">
            <div class="book_chapter p-t-1" id="ch566260"><h2 class="text-center p-b-2">1. Introduction</h2><p></p><p>In this week, we will discuss <span>Cross platform development, Flutter and the Dart language.</span><br></p><p>By the end of this week, you should be able to:</p><ul><li><a href="https://lms.latrobe.edu.au/mod/glossary/showentry.php?eid=37140&amp;displayformat=dictionary" title="Subject Intended Learning Outcomes: ILO 1" class="glossary autolink concept glossaryid11245">ILO 1</a>: Understand the Pros &amp; Cons of the various App framework types<br></li><li>ILO 2: Explore the fundamentals of the Dart Language.<br></li><li>ILO 3: Create and compare and Android and a Flutter App<br></li></ul><p></p></div>
            </div>
            <div class="p-b-2">
            <div class="book_chapter p-t-1" id="ch632120"><h2 class="text-center p-b-2">2. Cross-Platform Development</h2><p>Cross
 platform development is essentially writing code that you can use 
across many platforms ‘write code once and run everywhere’ [1].<br></p>
<p><strong>Cross-platform (coded) apps</strong> are developed in 
programming languages and tools not included in the development tools 
offered by the company that develops the platform and the OS that they 
run on [2].</p>
<p style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/image%25207.png" alt="" role="presentation"><br></p>
<p style="text-align: center;">Native Android Architecture [1]<br></p>
<p>So far in this subject we have focused on native apps, such as 
Android Apps that have been written in Java or Kotlin in the Android 
studio IDE, however this week we are focusing on cross platform apps, 
which we touched upon earlier in the semester.</p>
<p>The pros/cons of cross platform apps can vary dependent upon 
architecture, with performance approaching native on some of the 'native
 executed apps' such as Flutter or Progressive web apps using the new 
WASM stack machine (Web assembly) [2].<br></p>
<p></p>
<div style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/image%252011.png" alt="" role="presentation" width="750px"><br></div>
<div style="text-align: center;"><br></div>
<div style="text-align: center;">Mobile Application Types Extended [3,4, 5]</div>
<div>
    <h4><br></h4>
    <h3></h3><h3>Mobile Web Apps Architecture<br></h3><div>Mobile web 
apps are essentially a misnomer as they are less app and more a website 
designed to look like an app. As such the Architecture has more in 
common with a web page than with no native integration, the app running 
on the device browser.<br></div><div style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/image%252012.png" alt="" role="presentation"></div><div style="text-align: center;">Mobile Web App [4]<br></div><h3>Hybrid Apps</h3><div>Hybrid
 apps originally referred to apps that were a 'hybrid' of web and native
 technologies, however due to new offerings such as flutter (that uses 
the Dart language not web-based code) a new definition/taxonomy is 
required so I would expand the definition of a hybrid app to those that 
are a mix of native and other technologies. To further clarify you can 
split Hybrid<strong> <span class="atto-styles-highlight-yellow">coded</span></strong> apps by their <strong><span class="atto-styles-highlight-yellow">execution</span> </strong>style [5].<br></div><div><br></div><div><h4>Hybrid Executed Architecture</h4></div>
</div>
<div>
    <p>Some of the first cross platform app architectures were the 
browser based frameworks written in cross-platform web-based programming
 languages (HTML, CSS and JavaScript). They were a logical extension of 
standard web development, basically part of
        a browser wrapped in a native shell (Webview) [5]. In this 
architecture, as shown below creates hypertext markup language (HTML) 
contents and displays them in a WebView on the platform. The 
HTML/cascading style sheets (CSS) is used to recreate the Native 
original equipment
                            manufacturer (OEM) widgets. The app is 
written using a combination of JavaScript, HTML, and CSS. The platform's
 services are accessed over the JavaScript bridge. The ‘bridge’ does the
 context switches between the JavaScript
                            and the Native realms. It converts 
JavaScript instructions into Native instructions and vice versa [1]. 
Apps written in Cordova, PhoneGap and Ionic are examples of this 
category, although Cordova and PhoneGap are no longer being developed.<br></p><div><div><section id="c2" role="doc-chapter" epub:type="chapter"><section><section>
                    </section>
                </section>
            </section><br></div>
    </div>
    <div style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/image%25208.png" alt="" role="presentation"></div>
    <div style="text-align: center;">Mobile Web App [1]<br></div><br></div>
<div>
    <h4>Native Executed Apps Architecture<br></h4>
</div>
<div>There are new types of Cross-platform applications now being 
designed that are moving away from web based and java-script wrapped in 
native code, instead they are created using native and cross-platform 
programming languages and are then either compiled
    to assembly code ahead-of-time (AOT) or just-in-time (JIT), enabling
 them to still leverage native UI widgets. These apps are a type of 
Hybrid app that are defined by their <strong><span class="atto-styles-highlight-yellow">native code execution</span></strong>    and include React Native, Xamerin and Futter. <br>
    <div><br></div>
    <div>Lets see some examples of native executed apps...</div>
    <div><br></div>
    <div>
        <h5>React Native </h5>
    </div>
    <div>Although React Native is written in Javascript, a Webview is not used,
        <section>
            <section>
                <p>the JavaScript code communicates with Native(OEM) 
widgets and platform services over the react communications ‘bridge’. 
This bridge does the context switching from the JavaScript realm to the 
Native realm and vice versa facilitating the
                    <strong><span class="atto-styles-highlight-yellow">native execution</span></strong>
 of the javascript driven code by native widgets and services. This 
context switching happens for every widget and platform-service request 
that can
                    cause performance issues and make sometimes widget 
rendering glitchy [1].<br></p>
            </section>
        </section>
    </div>
</div>
<div style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/image%2525205_002.png" alt="" role="presentation"><br></div>
<div style="text-align: center;">React Native Architecture [1]<br></div>
<div><br></div>
<div>
    <h4>Flutter</h4>
    <div>
        <section>
            <section>
                <p>Flutter uses Dart language, which compiles 
ahead-of-time (AOT) into Native code for multiple platforms. Running the
 compiled native code provide <span class="atto-styles-highlight-yellow">native code execution</span> and also avoids performance
                    problems like those from the React Native 'Bridge'.<br></p>
            </section>
        </section><br></div>
</div>
<div style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/image%25204.png" alt="" role="presentation"><br></div>
<div style="text-align: center;">Flutter Architecture [1]</div>
<div style="text-align: left;"><br></div><div style="text-align: left;"><div>
        <h3>Progressive Web Apps</h3>
        <div>
            <p>A progressive web 
is essentially an improved web app that uses advances in browser 
capabilities to bring design elements along with other technology and 
features that are typically associated with native apps to a mobile 
browser. So it feels
                like an app, but it’s run within a browser. <br></p>
        </div>
    </div>
    <h4 style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/image%25209.png" alt="" role="presentation"></h4>
    <div style="text-align: center;">Progressive Web App [6]<br></div>
    <div><br></div>
    <h3><br></h3><br></div>
<div style="text-align: left;"><br></div>
<div style="margin-left: 30px;" class="editor-indent">
    <div style="text-align: left;"><h4><img src="Week%208%20Lecture%20Workbook_files/reading1.png" alt="" role="presentation" width="50" height="50"> Reading Task </h4></div><div style="text-align: left;">Please read the paper '<a href="https://ieeexplore-ieee-org.ez.library.latrobe.edu.au/document/9378923" target="_blank">A Comparison of Native and Cross-Platform Frameworks for Mobile Applications</a>'
        for a comparison between some of the currently available app 
creation tools paying particular attention to the performnce and 'ease 
of use comparisons. [6]</div><div style="text-align: left;"><br></div><div style="text-align: left;"><br></div></div><div style="text-align: left;"><h4>Source</h4></div><div style="margin-left: 30px;" class="editor-indent">
</div>

<div>[1] Tyagi, P. (2021). <i>Pragmatic flutter : Building cross-platform mobile apps for android, ios, web and desktop</i>. ProQuest Ebook Central <a onclick="window.open('https://ebookcentral-proquest-com.ez.library.latrobe.edu.au','_blank')" href="https://ebookcentral-proquest-com.ez.library.latrobe.edu.au/" target="_blank">https://ebookcentral-proquest-com.ez.library.latrobe.edu.au</a><br></div>
<div>[2] <a href="https://webassembly.org/" class="_blanktarget">https://webassembly.org/</a></div><div><div>[3] Scott Mann</div>
<div>[4] Marita Fitzgerald</div>[5] <a href="https://developer.ibm.com/articles/deciding-between-native-and-cross-platform-mobile-frontend-programming-frameworks/" class="_blanktarget">https://developer.ibm.com/articles/deciding-between-native-and-cross-platform-mobile-frontend-programming-frameworks/</a></div><div>[6] <a href="https://ieeexplore-ieee-org.ez.library.latrobe.edu.au/document/9378923" class="_blanktarget">https://ieeexplore-ieee-org.ez.library.latrobe.edu.au/document/9378923</a><br></div>
<p></p>
<section id="c2" role="doc-chapter" epub:type="chapter">
    <section></section>
</section><br>
<p></p></div>
            </div>
            <div class="p-b-2">
            <div class="book_chapter p-t-1" id="ch633504"><h2 class="text-center p-b-2">3. Cross-Platform Framework Comparison</h2><p dir="ltr" style="text-align: left;">With
 mobile technology advancements the favored Cross platform frameworks 
can vary from year to year, as shown in the reduction in popularity of 
React native in comparison to Flutter in the graphic below. The fast 
pace of technical progression also results in frameworks that lack user 
uptake being dropped by their respective firms, such as Adobe dropping 
Cordova and PhoneGap and Microsoft discontinuing Xamerin and replacing 
it was the very newly released .NET MAUI [2].<br></p> <p></p><p dir="ltr" style="text-align: left;"></p><div style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/image%25201.png" alt="" role="presentation" width="750px"></div><div style="text-align: center;">[1] Cross platform framework uptake<br></div><div><br></div><div><h4>Framework Pros &amp; Cons Summary<br></h4></div><div>The
 table below outlines comes of the pros and cons of the cross-platform 
frameworks in comparisons with purely native code, as you can see each 
has their own merits and suitability depending on which combination of 
the following is applicable to the desired app;</div><div><br></div><div style="margin-left: 30px;" class="editor-indent"><ul><li>Proposed app budget</li><li>Development timeline</li><li>Platform coverage required</li><li>Dev team experience</li><li>Desired back end</li><li>Required Native hardware integration</li><li>App responsiveness</li><li>App design &amp; feel</li></ul></div><div><br></div><p></p>
<p dir="ltr" style="text-align: left;"></p>
<table>
    <thead xmlns:dw="http://www.ibm.com/developerWorks/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <tr>
            <th>Core software</th>
            <th>iOS</th>
            <th>Android</th>
            <th>Web</th>
            <th>Pros</th>
            <th>Cons</th>
        </tr>
    </thead>
    <tbody xmlns:dw="http://www.ibm.com/developerWorks/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <tr>
            <td>XCode</td>
            <td>X</td>
            <td></td>
            <td></td>
            <td>
                <ul>
                    <li>Only method to author iOS and MacOS apps.</li><li>Strong sense of brand loyality<br></li><li>Standardized UI enables quicker development</li><li>Distribute in App Store<br></li>
                </ul>
            </td>
            <td>
                <ul>
                    <li>Large and proprietary; forces developers to include it as well as their own IDE choice.</li><li>Standardized UI make it harder to customize applications</li><li>Expensive to develop<br></li>
                </ul>
            </td>
        </tr>
        <tr>
            <td>Android Studio</td>
            <td></td>
            <td>X</td>
            <td></td>
            <td>
                <ul>
                    <li>Android Simulator</li>
                    <li>large plug-in community.</li><li>Open codebase</li><li>Optional UI components enabling speedy development</li><li>Distribute in App Store<br></li>
                </ul>
            </td>
            <td>
                <ul>
                    <li>JetBrains tooling, not Eclipse or other IDE for those familiar with those Java™ tools.</li><li>Expensive to develop</li><li>Higher testing cost to the varied array of available hardware<br></li>
                </ul>
            </td>
        </tr>
        
        <tr>
            <td>&nbsp;Ionic <br></td>
            <td>&nbsp;X</td>
            <td>&nbsp;X</td>
            <td>&nbsp;X</td>
            <td>
                <ul>
                    <li>Can easily be ported to a PWA</li><li>Quick development cycle</li><li>Cross Platform</li><li>Good documentation</li><li>Created with familiar web technologies so there is less of an initial learning curve.</li><li>Distribute in App Store<br></li>
                </ul>
            </td>
            <td>
                <ul>
                    <li>&nbsp;Hybrid app performance is slower than native app<br></li><li>Angular bias.</li><li>Limited free features, paid upgrade required<br></li>
                </ul>
            </td>
        </tr>
        
        <tr>
            <td>React Native</td>
            <td>X</td>
            <td>X</td>
            <td></td>
            <td><ul><li>Huge development community and support</li><li>React Native is translated to native code, with the native execution a faster app with a more native feel.</li><li>Can be integrated into existing native apps.</li><li>Cross Platform</li><li>Distribute in App Store<br></li></ul></td>
            <td><ul><li>Hybrid app is not as fast as native app.</li><li>Bridge can cause errors and glitches</li><li>It's still in Beta, so there may be issues<br></li></ul></td>
        </tr>
        <tr>
            <td>Flutter<br></td>
            <td>X</td>
            <td>X</td>
            <td>X</td>
            <td><ul><li>Free and pro version differentiated; Pro has server-side features that include continuous integration and testing.</li><li>Distribute in App Store</li><li>Cross Platform</li><li>Compiles to binary code <br></li><li>Distribute in App Store</li><li>Full customization &amp; fast rendering of UI</li><li>Fast development<br></li></ul></td>
            <td><ul><li>Large App size<br></li></ul></td>
        </tr>
        
    </tbody>
</table>
<div><br></div>
<div><br></div>
<div style="text-align: center;"></div><div><h4>Sources</h4></div>
<div>[1] <a href="https://www.statista.com/statistics/869224/worldwide-software-developer-working-hours/" class="_blanktarget">https://www.statista.com/statistics/869224/worldwide-software-developer-working-hours/</a></div><div>[2] <a href="https://docs.microsoft.com/en-us/dotnet/maui/what-is-maui" class="_blanktarget">https://docs.microsoft.com/en-us/dotnet/maui/what-is-maui</a><br></div>
<div><br></div>
<div><br></div>
<div><br></div>
<p></p></div>
            </div>
            <div class="p-b-2">
            <div class="book_chapter p-t-1" id="ch632121"><h2 class="text-center p-b-2">4. Introduction to Flutter</h2><p style="float: right; text-align: center; margin: 0 0 30px 30px; padding: 10px;"><small><img src="Week%208%20Lecture%20Workbook_files/image%2525201_002.png" alt=" User testing" class="img-responsive atto_image_button_text-bottom" width="135"><br>Pragmatic Flutter [1]<br><br></small></p>

<div>As a popular cross-platform application framework we have selected 
Flutter to study in the cross-platform component of this class. We will 
still be undertaking Android coding in the labs until week 12 when we 
will be writing the same app use    in both Android and Flutter so you 
can experience both coding styles. In the CSE3MAD reading list we have 
included a Flutter textbook '<a href="https://ebookcentral-proquest-com.ez.library.latrobe.edu.au/lib/latrobe/detail.action?docID=6646894" target="_blank">Pragmatic Flutter</a>'
    which we will be referring to this week, if you are interested in 
Flutter development I would recommend working through some of the code 
samples.</div><div><br></div><div><h3 id="what-is-flutter">What is Flutter?</h3>

<p>Flutter is Google’s portable UI toolkit for crafting beautiful,
natively compiled applications for mobile, web,
and desktop from a single codebase.
Flutter works with existing code,
is used by developers and organizations around
the world, and is free and open source. [2]</p><p></p><h3 id="what-makes-flutter-unique">What makes Flutter unique?</h3>

<p>Flutter is different than most other options
for building mobile apps because it doesn’t rely
on web browser technology nor the set of widgets
that ship with each device. Instead, Flutter uses
its own high-performance rendering engine to draw widgets.</p>

<p>In addition, Flutter is different because it only
has a thin layer of C/C++ code. Flutter implements
most of its system (compositing, gestures, animation,
framework, widgets, etc) in <a href="https://dart.dev/">Dart</a> (a modern,
concise, object-oriented language) that developers
can easily approach read, change, replace, or remove.&nbsp; [1]<br></p><p></p></div><div><h3><script src="Week%208%20Lecture%20Workbook_files/load.htm" type="text/javascript"></script> Why Choose flutter?</h3><div>Aside
 from its near native performance, ease of development and rising 
popularity the following attributes makes it stand out in the very 
crowded field of cross-platform app frameworks.</div><div><br></div><section id="c2" role="doc-chapter" epub:type="chapter"><section><section><ul><li><h5 id="sec2_2_4">Human Interface Design<br></h5></li></ul><div style="margin-left: 30px;" class="editor-indent"><p>Flutter
 team implemented Material Design Specification (Material Foundation) 
meticulously in Flutter. It makes easy to create slick, smooth, and 
crisp interfaces for different platforms like Android and iOS. [1]<br></p></div></section><section><ul><li><h5 id="sec2_2_5">Firebase Integration<br></h5></li></ul><div style="margin-left: 30px;" class="editor-indent"><p>Flutter's
 integration with Firebase (Firebase Platform) is reliable. Firebase 
provides the tools and services to support backend infrastructure 
instantaneously, which is scalable and serverless. It comes with 
real-time databases, authentication, cloud storage, hosting, 
cloud-function, machine learning support. [1]<br></p></div></section><section><ul><li><h5 id="sec2_2_6">Multiple IDE Support<br></h5></li></ul><div style="margin-left: 30px;" class="editor-indent"><p>You
 are not locked to a single IDE, Flutter can be develop in Android 
Studio (Google), VS Code (Microsoft), IntelliJ IDEA (Jetbrains), and 
command line.<br></p></div></section><section><ul><li><h5>Free &amp; Opensource</h5></li></ul><div style="margin-left: 30px;" class="editor-indent"><p>Developers can access the full capabilities of Flutter without being limited to by paywalls around desired widgets and functions<br></p></div></section><section><ul><li><h5 id="sec2_2_9">Cost Effective</h5></li></ul><div style="margin-left: 30px;" class="editor-indent"><p id="sec2_2_9">Flutter
 is not only used for developing user-facing front-end interfaces, but 
also solving backend problems. It provides support for code sharing from
 a single codebase. Flutter apps are built once and deployed on multiple
 platforms like Android, iOS, web, and desktop. You are not required to 
have separate teams to support them [1].<br></p></div></section></section></section></div>

<p dir="ltr" style="text-align: left;"></p>
<p></p><p></p>
<p dir="ltr" style="text-align: left;"></p>
<h4 id="what-technology-is-flutter-built-with">What technology is Flutter built with?</h4>

<p>Flutter is built with C, C++, Dart, and Skia (a 2D rendering engine). [2]<br></p><h3>Flutter Architecture</h3><div>Flutter is designed as an extensible, layered system. It exists as a series of
independent libraries that each depend on the underlying layer. <br></div><div>No layer has
privileged access to the layer below, and every part of the framework level is
designed to be optional and replaceable. [2]<br></div><br><div style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/archdiagram.png" alt="Architectural
diagram" width="750px"><br></div>
<div style="text-align: center;">High Level Flutter Architecture [2]</div><div style="text-align: left;"><div><br></div><ul><li><h5>The embedder</h5></li></ul><div style="margin-left: 30px;" class="editor-indent"><div><p>A platform-specific embedder provides
an entrypoint; coordinates with the underlying operating system for access to
services like rendering surfaces, accessibility, and input; and manages the
message event loop. The embedder is written in a language that is appropriate
for the platform: currently Java and C++ for Android, Objective-C/Objective-C++
for iOS and macOS, and C++ for Windows and Linux. [2]</p></div></div><ul><li><h5>The Flutter engine</h5></li></ul><div><div style="margin-left: 30px;" class="editor-indent"><p>Is mostly written in C++
and supports the primitives necessary to support all Flutter applications. The
engine is responsible for rasterizing composited scenes whenever a new frame
needs to be painted. It provides the low-level implementation of Flutter’s core
API, including graphics (through <a href="https://skia.org/">Skia</a>), text layout, file
and network I/O, accessibility support, plugin architecture, and a Dart runtime
and compile toolchain.</p></div><ul><li><h5>The Flutter framework</h5></li></ul><p></p><div style="margin-left: 30px;" class="editor-indent"><p>Typically, developers interact with Flutter through the <strong>Flutter framework</strong>,
which provides a modern, reactive framework written in the Dart language. It
includes a rich set of platform, layout, and foundational libraries, composed of
a series of layers. Working from the bottom to the top, we have:</p>

</div><ul><ul>
  <li>Basic <strong><a href="https://api.flutter.dev/flutter/foundation/foundation-library.html">foundational</a></strong>
classes, and building block services such as
<strong><a href="https://api.flutter.dev/flutter/animation/animation-library.html">animation</a>,
<a href="https://api.flutter.dev/flutter/painting/painting-library.html">painting</a>, and
<a href="https://api.flutter.dev/flutter/gestures/gestures-library.html">gestures</a></strong> that offer
commonly used abstractions over the underlying foundation.</li>
  <li>The <strong><a href="https://api.flutter.dev/flutter/rendering/rendering-library.html">rendering
layer</a></strong> provides an
abstraction for dealing with layout. With this layer, you can build a tree of
renderable objects. You can manipulate these objects dynamically, with the
tree automatically updating the layout to reflect your changes.</li>
  <li>The <strong><a href="https://api.flutter.dev/flutter/widgets/widgets-library.html">widgets layer</a></strong> is
a composition abstraction. Each render object in the rendering layer has a
corresponding class in the widgets layer. In addition, the widgets layer
allows you to define combinations of classes that you can reuse. This is the
layer at which the reactive programming model is introduced.</li>
  <li>The
<strong><a href="https://api.flutter.dev/flutter/material/material-library.html">Material</a></strong>
and
<strong><a href="https://api.flutter.dev/flutter/cupertino/cupertino-library.html">Cupertino</a></strong>
libraries offer comprehensive sets of controls that use the widget layer’s
composition primitives to implement the Material or iOS design languages.</li></ul>
</ul><br></div></div><div style="text-align: left;"><h4><img src="Week%208%20Lecture%20Workbook_files/reading1.png" alt="" role="presentation" width="50" height="50"> Read </h4>Read the article "<a href="https://flutter.dev/docs/get-started/flutter-for/android-devs">Flutter for Android devs</a>"
 to gain an understanding of the equivaintent functionalities in 
Flutter. This is actually a good example of the of the core mobile 
development tasks that must exist in all mobile frameworks. As alothough
 the code and approach may change the use cases such as responding to a 
button click or performing tasks in the background will always be 
required. [3]<br></div><div style="text-align: center;"><br></div>
<div>Sources</div>
<div>[1] <a href="https://ebookcentral-proquest-com.ez.library.latrobe.edu.au/lib/latrobe/detail.action?docID=6646894" class="_blanktarget">https://ebookcentral-proquest-com.ez.library.latrobe.edu.au/lib/latrobe/detail.action?docID=6646894</a><br></div><div>[2] <a href="https://flutter.dev/docs/resources/architectural-overview" class="_blanktarget">https://flutter.dev/docs/resources/architectural-overview</a> (<a rel="license" href="https://creativecommons.org/licenses/by/4.0">Creative
            Commons Attribution 4.0 International License</a>)<br></div><div>[3] <a href="https://flutter.dev/docs/get-started/flutter-for/android-devs" class="_blanktarget">https://flutter.dev/docs/get-started/flutter-for/android-devs</a> (<a rel="license" href="https://creativecommons.org/licenses/by/4.0">Creative
            Commons Attribution 4.0 International License</a>)<br></div>
<p></p></div>
            </div>
            <div class="p-b-2">
            <div class="book_chapter p-t-1" id="ch632122"><h2 class="text-center p-b-2">5. Dart Quickstart</h2><p dir="ltr" style="text-align: left;">We
 are just having a quick look at the Dart language, we don't expect you 
to learn it in one week, but its good to get an overview of the language
 so you can see it is not a large jump from languages you already know. <br></p>
<ul>
    <li>Dart is a client-optimized language for developing fast apps on 
any platform. Its goal is to offer the most productive programming 
language for multi-platform development, paired with a
        <a href="https://dart.dev/overview#platform">flexible execution runtime platform</a> for app frameworks. [1]<br></li>
    <li>Dart also forms the foundation of <a href="https://flutter.dev/">Flutter</a>.
 Dart provides the language and runtimes that power Flutter apps, but 
Dart also supports many core developer tasks like formatting, analyzing,
 and testing code. [1]</li></ul><br><ul>
</ul>
<h4 dir="ltr" style="text-align: left;">About the language</h4>
<br><div style="margin-left: 30px;" class="editor-indent"><ul><li>Type Safe, it uses static type checking to ensure that a variable’s value <em>always</em> matches the variable’s static type. (Also known as sound typing)</li><li>Variable types are mandatory but they do not need to be
    expressly stated, they can be inferred by the language.</li><li>Dart is a very flexible language to use, with the<strong> dynamic keyword</strong> allowing you to change variable type.</li><li>Dart offers <a href="https://dart.dev/null-safety">sound null safety</a>,
 meaning that values can’t be null unless you say they can be. With 
sound null safety, Dart can protect you from null exceptions at runtime 
through static code analysis.</li></ul></div><div style="margin-left: 30px;" class="editor-indent"><p dir="ltr" style="text-align: left;">Please
 watch the video 'Null safety in Dart' by clicking on the link below for
 some specific examples of Null safety and how you can still elect to 
use null as a value for specific variables.&nbsp; <br></p></div>
<div>
    <div>
        <div style="margin-left: 30px;" class="editor-indent"><p><img src="Week%208%20Lecture%20Workbook_files/video2.png" alt="" role="presentation" width="50" height="50">&nbsp; <a href="https://youtu.be/iYhOU9AuaFs" target="_blank">https://youtu.be/iYhOU9AuaFs</a> [2]</p><p><br></p></div><p></p><h4 dir="ltr"></h4><h4>Dart Platforms</h4><div style="text-align: center;"><div><img src="Week%208%20Lecture%20Workbook_files/Dart-platforms-29d94ccaaea4bdd0b2bcf6e37084bae890eb8bae482ba.svg" alt="An illustration of the targets supported by Dart" width="800px"></div><div>[1]<br></div></div><br><p></p><p>Dart’s compiler technology lets you run code in different ways:<br></p><p><strong>&nbsp;&nbsp;&nbsp; Native platform JIT: </strong>Primarily used during development:<br></p><div style="margin-left: 30px;" class="editor-indent"><ul><li>&nbsp;incremental recompilation (enabling hot reload with our rebuild)</li><li>&nbsp;live metrics collections (powering DevTools)</li><li>&nbsp;debugging support.</li></ul></div><p><strong>&nbsp;&nbsp;&nbsp; Native platform AOT:</strong> When apps are ready to be deployed to production<br></p><div style="margin-left: 30px;" class="editor-indent"><ul><li>&nbsp;Dart AOT compiler enables ahead-of-time compilation to native ARM or x64 machine code.</li><li>&nbsp;AOT-compiled apps launch with short startup time.</li><li>&nbsp;The
 AOT-compiled code runs inside an efficient Dart runtime that enforces 
the sound Dart type system and manages memory using fast object 
allocation and a generational garbage collector.</li></ul></div><p><strong>&nbsp;&nbsp;&nbsp; Web platform:</strong>
 For apps targeting the web, Dart includes both a development time 
compiler (dartdevc) and a production time compiler (dart2js). <br></p><div style="margin-left: 30px;" class="editor-indent"><ul><li>Both compilers translate Dart into JavaScript. [1]</li></ul></div><div style="margin-left: 30px;" class="editor-indent"><p><br></p></div>
    </div>
</div>

<h4 dir="ltr" style="text-align: left;">The main function</h4>
<p dir="ltr" style="text-align: left;">Every app has a <code>main()</code> function. To display text on the console, you can use the top-level <code>print()</code> function:<br></p>
<div style="text-align:center;"><br>
    <iframe style="width:750px;height:250px;" src="Week%208%20Lecture%20Workbook_files/embed-inline.htm"></iframe></div>
<div style="text-align:center;"><br></div>

<div style="text-align:center;">
    <div style="text-align: left;">
        <h4>Variables</h4>
    </div>
    <div style="text-align: left;">
        <section>
            <p></p>
            <p>The Dart language has special support for the following:</p>

            <ul>
                <ul>
                    <li>
                        <a href="https://dart.dev/guides/language/language-tour#numbers">Numbers</a> (<code>int</code>, <code>double</code>)</li>
                    <li>
                        <a href="https://dart.dev/guides/language/language-tour#strings">Strings</a> (<code>String</code>)</li>
                    <li>
                        <a href="https://dart.dev/guides/language/language-tour#booleans">Booleans</a> (<code>bool</code>)</li>
                    <li>
                        <a href="https://dart.dev/guides/language/language-tour#lists">Lists</a> (<code>List</code>, also known as <em>arrays</em>)</li>
                    <li>
                        <a href="https://dart.dev/guides/language/language-tour#sets">Sets</a> (<code>Set</code>)</li>
                    <li>
                        <a href="https://dart.dev/guides/language/language-tour#maps">Maps</a> (<code>Map</code>)</li>
                    <li>
                        <a href="https://dart.dev/guides/language/language-tour#characters">Runes</a> (<code>Runes</code>; often replaced by the <code>characters</code> API)</li>
                    <li>
                        <a href="https://dart.dev/guides/language/language-tour#symbols">Symbols</a> (<code>Symbol</code>) [1]<br></li>

                </ul>
            </ul>We will be going through the data types one by one in the coming pages.<br><div style="text-align: left;"><br></div>
    <div style="text-align: left;">
        <h4>Source</h4>
    </div>
    <div style="text-align: left;">[1] <a href="https://dart.dev/overview" class="_blanktarget">https://dart.dev/overview</a> (<a href="https://creativecommons.org/licenses/by/4.0/">CC&nbsp;BY&nbsp;4.0</a>)</div>
    <div style="text-align: left;">[2] <a href="https://youtu.be/iYhOU9AuaFs" class="_blanktarget">https://youtu.be/iYhOU9AuaFs</a><br></div><div style="text-align: left;"><br></div>
</section></div></div></div>
            </div>
            <div class="p-b-2">
            <div class="book_chapter p-t-1" id="ch637212"><h3 class="text-center p-b-2">5.1. Numbers</h3>In Dart, all numbers are part of the common Object type hierarchy, and there are two concrete, user-visible numeric types: <strong>int</strong>, representing integer values, and <strong>double</strong>, representing fractional values.
<h5 style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/number-class-hierarchy-66b542e875f2d27cbf3b7132d2fc5ead38134.svg" alt="Object is the parent of num, which is the parent of int and double"></h5>
<div style="text-align: center;">[1]<br></div>
<div><br></div>
<div>
    <h4>Differences between Native and Web</h4>
</div>
<div>Depending on the platform, those numeric types have different, 
hidden implementations. In particular, Dart has two very different types
 of targets it compiles to:<br><br>
    <div>
        <h5>
            </h5><h5>&nbsp;&nbsp;&nbsp; Native: Most often, a 64-bit mobile or desktop processor.</h5><ul><ul><li>For <span>native targets</span>, 
you can assume that int maps to a signed 64-bit integer representation 
and double maps to a 64-bit IEEE floating-point representation that 
matches the underlying processor.<br></li></ul>
            </ul><h5>&nbsp;&nbsp;&nbsp; Web: JavaScript as the primary execution engine.</h5><ul><ul><li>But
    <span> on the web</span>, where
 Dart compiles to and interoperates with JavaScript, there is a single 
numeric representation: a 64-bit double-precision floating-point value. 
For efficiency, Dart maps both int and double to this single 
representation.
    The visible type hierarchy remains the same, but the underlying 
hidden implementation types are different and intertwined.<br></li></ul>
        </ul>
        <ul>
        </ul>
    </div>
</div>
<div style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/number-platform-specific-24fca9380440f855ec3aa2e44fa2a17834b.svg" alt="Implementation classes vary by platform; for JavaScript, the class that implements int also implements double"></div>
<div style="text-align: center;">[1]</div>
<div style="text-align: left;"><br></div>
<div style="text-align: left;"><br></div>
<div style="text-align: center;"><br></div>

<div style="text-align: center;">
</div>
<p style="text-align: center;"></p>


<div style="text-align: center;"><iframe style="width:750px;height:780px;" src="Week%208%20Lecture%20Workbook_files/embed-inline_002.htm"></iframe></div>
<div style="text-align:center;">
    <div style="text-align: left;">
        <div><br></div>
        <div>
            <h4>Source</h4>
        </div>
        <div>[1] <a href="https://dart.dev/guides/language/numbers" class="_blanktarget">https://dart.dev/guides/language/numbers</a> (<a href="https://creativecommons.org/licenses/by/4.0/">CC&nbsp;BY&nbsp;4.0</a>)</div>
        <div>[2] <a href="https://api.dart.dev/stable/2.14.3/dart-core/num-class.html" class="_blanktarget">https://api.dart.dev/stable/2.14.3/dart-core/num-class.html</a><br></div><br></div>

    <p>


    </p>


    <div style="text-align:center;"></div>
</div></div>
            </div>
            <div class="p-b-2">
            <div class="book_chapter p-t-1" id="ch637299"><h3 class="text-center p-b-2">5.2. Strings</h3><p dir="ltr" style="text-align: left;">A
 Dart string (String object) holds a sequence of UTF-16 code units. You 
can use either single or double quotes to create a string:</p>

<!-- HTML generated using hilite.me -->
<div style="background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;">
    <pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-weight: bold">var</span> s1 <span style="color: #333333">=</span> <span style="background-color: #fff0f0">'Single quotes work well for string literals.'</span>;
<span style="color: #008800; font-weight: bold">var</span> s2 <span style="color: #333333">=</span> <span style="background-color: #fff0f0">"Double quotes work just as well."</span>;
<span style="color: #008800; font-weight: bold">var</span> s3 <span style="color: #333333">=</span> <span style="background-color: #fff0f0">'It</span><span style="color: #666666; font-weight: bold; background-color: #fff0f0">\'</span><span style="background-color: #fff0f0">s easy to escape the string delimiter.'</span>;
<span style="color: #008800; font-weight: bold">var</span> s4 <span style="color: #333333">=</span> <span style="background-color: #fff0f0">"It's even easier to use the other delimiter."</span>;
</pre>
</div>

<p dir="ltr" style="text-align: left;"><br></p>
<p dir="ltr" style="text-align: left;">You can use ${} to interpolate 
the value of Dart expressions within strings. The curly braces can be 
omitted when evaluating identifiers:</p>
<!-- HTML generated using hilite.me --><div style="background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-weight: bold">var</span> s <span style="color: #333333">=</span> <span style="background-color: #fff0f0">'string interpolation'</span>;

<span style="color: #008800; font-weight: bold">assert</span>(<span style="background-color: #fff0f0">'Dart has </span><span style="background-color: #eeeeee">$</span>s<span style="background-color: #fff0f0">, which is very handy.'</span> <span style="color: #333333">==</span>
    <span style="background-color: #fff0f0">'Dart has string interpolation, '</span>
        <span style="background-color: #fff0f0">'which is very handy.'</span>);
<span style="color: #008800; font-weight: bold">assert</span>(<span style="background-color: #fff0f0">'That deserves all caps. '</span>
        <span style="background-color: #fff0f0">'</span><span style="background-color: #eeeeee">${</span>s.toUpperCase()<span style="background-color: #eeeeee">}</span><span style="background-color: #fff0f0"> is very handy!'</span> <span style="color: #333333">==</span>
    <span style="background-color: #fff0f0">'That deserves all caps. '</span>
        <span style="background-color: #fff0f0">'STRING INTERPOLATION is very handy!'</span>);
</pre></div>

<p dir="ltr" style="text-align: left;"><br></p>
<p dir="ltr" style="text-align: left;">You can concatenate strings using adjacent string literals or the + operator:</p>
<!-- HTML generated using hilite.me -->
<div style="background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;">
    <pre style="margin: 0; line-height: 125%"><span style="color: #008800; font-weight: bold">var</span> s1 <span style="color: #333333">=</span> <span style="background-color: #fff0f0">'String '</span>
    <span style="background-color: #fff0f0">'concatenation'</span>
    <span style="background-color: #fff0f0">" works even over line breaks."</span>;
<span style="color: #008800; font-weight: bold">assert</span>(s1 <span style="color: #333333">==</span>
    <span style="background-color: #fff0f0">'String concatenation works even over '</span>
        <span style="background-color: #fff0f0">'line breaks.'</span>);

<span style="color: #008800; font-weight: bold">var</span> s2 <span style="color: #333333">=</span> <span style="background-color: #fff0f0">'The + operator '</span> <span style="color: #333333">+</span> <span style="background-color: #fff0f0">'works, as well.'</span>;
<span style="color: #008800; font-weight: bold">assert</span>(s2 <span style="color: #333333">==</span> <span style="background-color: #fff0f0">'The + operator works, as well.'</span>);
</pre>
</div>

<p dir="ltr" style="text-align: left;"><br></p>

<h4 dir="ltr" style="text-align: left;">Useful String Search and Method Examples</h4>

<div style="text-align: center;"><iframe style="width:750px;height:780px;" src="Week%208%20Lecture%20Workbook_files/embed-inline_003.htm"></iframe></div>
<h4 dir="ltr" style="text-align: left;"></h4><h4 dir="ltr"><br></h4><h4 dir="ltr"><img src="Week%208%20Lecture%20Workbook_files/folder.png" alt="" role="presentation" width="50" height="50"> Resources</h4>
<p dir="ltr" style="text-align: left;">The String Class <a href="https://api.dart.dev/stable/2.14.3/dart-core/String-class.html" class="_blanktarget">https://api.dart.dev/stable/2.14.3/dart-core/String-class.html</a><br></p>
<p dir="ltr" style="text-align: left;"></p>
<div>
    <h4>Source</h4>
</div>
<div>[1] <a href="https://dart.dev/guides/libraries/library-tour#strings-and-regular-expressions" class="_blanktarget">https://dart.dev/guides/libraries/library-tour#strings-and-regular-expressions</a> (<a href="https://creativecommons.org/licenses/by/4.0/">CC&nbsp;BY&nbsp;4.0</a>)<br></div>
<div>[2] <a href="https://dart.dev/overview" class="_blanktarget">https://dart.dev/overview</a> (<a href="https://creativecommons.org/licenses/by/4.0/">CC&nbsp;BY&nbsp;4.0</a>)</div><br>
<p></p></div>
            </div>
            <div class="p-b-2">
            <div class="book_chapter p-t-1" id="ch637213"><h3 class="text-center p-b-2">5.3. Booleans</h3><h5 style="text-align: left;"><br></h5>
<div style="text-align: left;">To represent boolean values, Dart has a type named <code>bool</code>. Only two objects have type bool: the boolean literals <code>true</code> and <code>false</code>, which are both compile-time constants.<br></div>
<div style="text-align: center;"><iframe style="width:750px;height:350px;" src="Week%208%20Lecture%20Workbook_files/embed-inline_004.htm"></iframe></div><div style="text-align: left;"><br></div><div style="text-align: left;"><h4 dir="ltr"></h4><h4 dir="ltr"><img src="Week%208%20Lecture%20Workbook_files/folder.png" alt="" role="presentation" width="50" height="50"> Resources</h4>
<p dir="ltr">The Bool Class <a href="https://api.dart.dev/be/136854/dart-core/bool-class.html" target="_blank">https://api.dart.dev/be/136854/dart-core/bool-class.html</a><br></p>
<p dir="ltr"></p>
<div>
    <h4>Source</h4>
</div>
<div>[1] <a href="https://dart.dev/guides/language/language-tour#booleans" class="_blanktarget">https://dart.dev/guides/language/language-tour#booleans</a> (<a href="https://creativecommons.org/licenses/by/4.0/">CC&nbsp;BY&nbsp;4.0</a>)<br></div>
<div>[2] <a href="https://dart.dev/overview">https://dart.dev/overview</a> (<a href="https://creativecommons.org/licenses/by/4.0/">CC&nbsp;BY&nbsp;4.0</a>)</div><br></div></div>
            </div>
            <div class="p-b-2">
            <div class="book_chapter p-t-1" id="ch637214"><h3 class="text-center p-b-2">5.4. Lists</h3><h5 style="text-align: left;"><br></h5>
            <div>Perhaps the most common collection in nearly every programming language is the <em>array</em>, or ordered group of objects. In Dart, arrays are
                <a href="https://api.dart.dev/stable/dart-core/List-class.html"><code>List</code></a> objects, so most people just call them <em>lists</em>. You can add a comma after the last item in a Dart collection literal. This <em>trailing comma</em>                doesn’t affect the collection, but it can help prevent copy-paste errors.</div><div style="text-align: center;"><br></div>
            <div style="text-align: center;"><iframe style="width:750px;height:850px;" src="Week%208%20Lecture%20Workbook_files/embed-inline_005.htm"></iframe></div>
        <div style="text-align:center;">[1,3]</div><div style="text-align:center;"><br></div><div style="text-align: left;"><h4 dir="ltr"></h4><h4 dir="ltr"><img src="Week%208%20Lecture%20Workbook_files/folder.png" alt="" role="presentation" width="50" height="50"> Resources</h4>
<p dir="ltr">The List Class <a href="https://api.dart.dev/stable/2.14.1/dart-core/List-class.html" class="_blanktarget">https://api.dart.dev/stable/2.14.1/dart-core/List-class.html</a><br></p>
<p dir="ltr"></p>
<div>
    <h4>Source</h4>
</div>
<div>[1] <a href="https://dart.dev/guides/language/language-tour#lists" target="_blank">https://dart.dev/guides/language/language-tour#lists</a> (<a href="https://creativecommons.org/licenses/by/4.0/">CC&nbsp;BY&nbsp;4.0</a>)<br></div>
<div>[2] <a href="https://dart.dev/overview">https://dart.dev/overview</a> (<a href="https://creativecommons.org/licenses/by/4.0/">CC&nbsp;BY&nbsp;4.0</a>)</div><div>[3] Tyagi, Priyanka. <i>Pragmatic Flutter : Building Cross-Platform Mobile Apps for Android, IOS, Web and Desktop</i>, Taylor &amp; Francis Group, 2021.<i> ProQuest Ebook Central</i>, <a href="https://ebookcentral-proquest-com.ez.library.latrobe.edu.au/lib/latrobe/detail.action?docID=6646894">https://ebookcentral-proquest-com.ez.library.latrobe.edu.au/lib/latrobe/detail.action?docID=6646894</a>.<br></div><br></div>
        <div style="text-align: left;"></div></div>
            </div>
            <div class="p-b-2">
            <div class="book_chapter p-t-1" id="ch637215"><h3 class="text-center p-b-2">5.5. Dynamic Variables</h3><h5><br></h5>
        
        <div style="text-align: left;">The dynamic keyword when declaring a variable allows you to reassign the data type if required as shown below;</div>
        <div style="text-align:center;"><br>
            <iframe style="width:750px;height:350px;" src="Week%208%20Lecture%20Workbook_files/embed-inline_006.htm"></iframe></div><div style="text-align: left;"><div><p dir="ltr"></p>
<div>
    <h4>Source</h4>
</div>

<div>[1] <a href="https://dart.dev/overview">https://dart.dev/overview</a> (<a href="https://creativecommons.org/licenses/by/4.0/">CC&nbsp;BY&nbsp;4.0</a>)</div></div><br></div>
        <div style="text-align: left;"></div></div>
            </div>
            <div class="p-b-2">
            <div class="book_chapter p-t-1" id="ch637216"><h3 class="text-center p-b-2">5.6. Set</h3><h5><br></h5>
        
        <div style="text-align: left;">A set in Dart is an unordered collection of unique items. Dart support for sets is provided by set literals and the
            <a href="https://api.dart.dev/stable/dart-core/Set-class.html"><code>Set</code></a> type.</div><div style="text-align: left;"><br>
            <div style="text-align: center;"><br><iframe style="width:750px;height:650px;" src="Week%208%20Lecture%20Workbook_files/embed-inline_007.htm"></iframe></div><div style="text-align: center;"><br></div><div style="text-align: left;"><h4 dir="ltr"></h4><h4 dir="ltr"><img src="Week%208%20Lecture%20Workbook_files/folder.png" alt="" role="presentation" width="50" height="50"> Resources</h4>
<p dir="ltr">The Set Class <a href="https://api.dart.dev/stable/2.14.1/dart-core/Set-class.html" target="_blank">https://api.dart.dev/stable/2.14.1/dart-core/Set-class.html</a><br></p>
<p dir="ltr"></p>
<div>
    <h4>Source</h4>
</div>

<div>[1] <a href="https://dart.dev/overview">https://dart.dev/overview</a> (<a href="https://creativecommons.org/licenses/by/4.0/">CC&nbsp;BY&nbsp;4.0</a>)</div><br></div>
            <div style="text-align: left;"></div></div></div>
            </div>
            <div class="p-b-2">
            <div class="book_chapter p-t-1" id="ch637217"><h3 class="text-center p-b-2">5.7. Maps</h3><h5><br></h5>
<div style="text-align: left;">In general, a map is an object that associates keys and values. Both keys and values can be any type of object. Each <em>key</em> occurs only once, but you can use the same <em>value</em> multiple times. Dart support for maps is provided by map literals
    and the <a href="https://api.dart.dev/stable/dart-core/Map-class.html"><code>Map</code></a> type.<br></div>

<div style="text-align:center;"><br>
    <iframe style="width:750px;height:650px;" src="Week%208%20Lecture%20Workbook_files/embed-inline_008.htm"></iframe></div>

<div style="text-align:center;"><br></div><h4 dir="ltr"></h4><h4 dir="ltr"><img src="Week%208%20Lecture%20Workbook_files/folder.png" alt="" role="presentation" width="50" height="50"> Resources</h4>The Map Class <a href="https://api.dart.dev/stable/2.14.1/dart-core/Map-class.html" target="_blank">https://api.dart.dev/stable/2.14.1/dart-core/Map-class.html</a><br>
<p dir="ltr"></p>
<div>
    <h4>Source</h4>
</div>
<div>[1] <a href="https://dart.dev/guides/language/language-tour#maps" target="_blank">https://dart.dev/guides/language/language-tour#maps</a> (<a href="https://creativecommons.org/licenses/by/4.0/">CC&nbsp;BY&nbsp;4.0</a>)<br></div>
<div>[2] <a href="https://dart.dev/overview">https://dart.dev/overview</a> (<a href="https://creativecommons.org/licenses/by/4.0/">CC&nbsp;BY&nbsp;4.0</a>)</div><br><div style="text-align: left;"><br></div></div>
            </div>
            <div class="p-b-2">
            <div class="book_chapter p-t-1" id="ch637332"><h3 class="text-center p-b-2">5.8. Keywords</h3><p dir="ltr" style="text-align: left;"></p><p>Avoid using these words as identifiers.
However, if necessary, the keywords marked with superscripts can be identifiers:</p>

<ul>
  <li>
    <p>Words with the superscript <strong>1</strong> are <strong>contextual keywords</strong>,
which have meaning only in specific places.
They’re valid identifiers everywhere.</p>
  </li>
  <li>
    <p>Words with the superscript <strong>2</strong> are <strong>built-in identifiers</strong>.
To simplify the task of porting JavaScript code to Dart,
these keywords are valid identifiers in most places,
but they can’t be used as class or type names, or as import prefixes.</p>
  </li>
  <li>
    <p>Words with the superscript <strong>3</strong> are limited reserved words related to
<a href="https://dart.dev/guides/language/language-tour#asynchrony-support">asynchrony support</a>.
You can’t use <code>await</code> or <code>yield</code> as an identifier
in any function body marked with <code>async</code>, <code>async*</code>, or <code>sync*</code>.</p>
  </li>
</ul>

<p>All other words in the table are <strong>reserved words</strong>,
which can’t be identifiers.</p><p dir="ltr" style="text-align: left;"></p><table><tbody><tr><td><a href="https://dart.dev/guides/language/language-tour#abstract-classes">abstract</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td><a href="https://dart.dev/guides/language/language-tour#if-and-else">else</a></td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#using-libraries">import</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#importing-only-part-of-a-library">show</a>&nbsp;<sup title="contextual keyword" alt="contextual keyword">1</sup>
</td>
      </tr>
      <tr>
        <td>
<a href="https://dart.dev/guides/language/language-tour#type-test-operators">as</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td><a href="https://dart.dev/guides/language/language-tour#enumerated-types">enum</a></td>
        <td><a href="https://dart.dev/guides/language/language-tour#for-loops">in</a></td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#class-variables-and-methods">static</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
      </tr>
      <tr>
        <td><a href="https://dart.dev/guides/language/language-tour#assert">assert</a></td>
        <td>
<a href="https://dart.dev/guides/libraries/create-library-packages">export</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td>
<a href="https://stackoverflow.com/questions/28595501/was-the-interface-keyword-removed-from-dart">interface</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td><a href="https://dart.dev/guides/language/language-tour#extending-a-class">super</a></td>
      </tr>
      <tr>
        <td>
<a href="https://dart.dev/guides/language/language-tour#asynchrony-support">async</a>&nbsp;<sup title="contextual keyword" alt="contextual keyword">1</sup>
</td>
        <td><a href="https://dart.dev/guides/language/language-tour#extending-a-class">extends</a></td>
        <td><a href="https://dart.dev/guides/language/language-tour#type-test-operators">is</a></td>
        <td><a href="https://dart.dev/guides/language/language-tour#switch-and-case">switch</a></td>
      </tr>
      <tr>
        <td>
<a href="https://dart.dev/guides/language/language-tour#asynchrony-support">await</a>&nbsp;<sup title="limited reserved word" alt="limited reserved word">3</sup>
</td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#extension-methods">extension</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#late-variables">late</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#generators">sync</a>&nbsp;<sup title="contextual keyword" alt="contextual keyword">1</sup>
</td>
      </tr>
      <tr>
        <td><a href="https://dart.dev/guides/language/language-tour#break-and-continue">break</a></td>
        <td>
<a href="https://stackoverflow.com/questions/24929659/what-does-external-mean-in-dart">external</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#libraries-and-visibility">library</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td><a href="https://dart.dev/guides/language/language-tour#constructors">this</a></td>
      </tr>
      <tr>
        <td><a href="https://dart.dev/guides/language/language-tour#switch-and-case">case</a></td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#factory-constructors">factory</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#adding-features-to-a-class-mixins">mixin</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td><a href="https://dart.dev/guides/language/language-tour#throw">throw</a></td>
      </tr>
      <tr>
        <td><a href="https://dart.dev/guides/language/language-tour#catch">catch</a></td>
        <td><a href="https://dart.dev/guides/language/language-tour#booleans">false</a></td>
        <td><a href="https://dart.dev/guides/language/language-tour#using-constructors">new</a></td>
        <td><a href="https://dart.dev/guides/language/language-tour#booleans">true</a></td>
      </tr>
      <tr>
        <td><a href="https://dart.dev/guides/language/language-tour#instance-variables">class</a></td>
        <td><a href="https://dart.dev/guides/language/language-tour#final-and-const">final</a></td>
        <td><a href="https://dart.dev/guides/language/language-tour#default-value">null</a></td>
        <td><a href="https://dart.dev/guides/language/language-tour#catch">try</a></td>
      </tr>
      <tr>
        <td><a href="https://dart.dev/guides/language/language-tour#final-and-const">const</a></td>
        <td><a href="https://dart.dev/guides/language/language-tour#finally">finally</a></td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#catch">on</a>&nbsp;<sup title="contextual keyword" alt="contextual keyword">1</sup>
</td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#typedefs">typedef</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
      </tr>
      <tr>
        <td><a href="https://dart.dev/guides/language/language-tour#break-and-continue">continue</a></td>
        <td><a href="https://dart.dev/guides/language/language-tour#for-loops">for</a></td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#_operators">operator</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td><a href="https://dart.dev/guides/language/language-tour#variables">var</a></td>
      </tr>
      <tr>
        <td>
<a href="https://dart.dev/guides/language/sound-problems#the-covariant-keyword">covariant</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#functions">Function</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td>
<a href="https://dart.dev/guides/libraries/create-library-packages#organizing-a-library-package">part</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td><a href="https://dart.dev/guides/language/language-tour#built-in-types">void</a></td>
      </tr>
      <tr>
        <td><a href="https://dart.dev/guides/language/language-tour#switch-and-case">default</a></td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#getters-and-setters">get</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#named-parameters">required</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td><a href="https://dart.dev/guides/language/language-tour#while-and-do-while">while</a></td>
      </tr>
      <tr>
        <td>
<a href="https://dart.dev/guides/language/language-tour#lazily-loading-a-library">deferred</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#importing-only-part-of-a-library">hide</a>&nbsp;<sup title="contextual keyword" alt="contextual keyword">1</sup>
</td>
        <td><a href="https://dart.dev/guides/language/language-tour#catch">rethrow</a></td>
        <td><a href="https://dart.dev/guides/language/language-tour#adding-features-to-a-class-mixins">with</a></td>
      </tr>
      <tr>
        <td><a href="https://dart.dev/guides/language/language-tour#while-and-do-while">do</a></td>
        <td><a href="https://dart.dev/guides/language/language-tour#if-and-else">if</a></td>
        <td><a href="https://dart.dev/guides/language/language-tour#functions">return</a></td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#generators">yield</a>&nbsp;<sup title="limited reserved word" alt="limited reserved word">3</sup>
</td>
      </tr>
      <tr>
        <td>
<a href="https://dart.dev/guides/language/language-tour#important-concepts">dynamic</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#implicit-interfaces">implements</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td>
<a href="https://dart.dev/guides/language/language-tour#getters-and-setters">set</a>&nbsp;<sup title="built-in-identifier" alt="built-in-identifier">2</sup>
</td>
        <td>&nbsp;</td></tr></tbody></table><div><br><p dir="ltr"></p>
<div>
    <h4>Source</h4>
</div>
<div>[1] <a href="https://dart.dev/guides/language/language-tour#keywords" class="_blanktarget">https://dart.dev/guides/language/language-tour#keywords</a> (<a href="https://creativecommons.org/licenses/by/4.0/">CC&nbsp;BY&nbsp;4.0</a>)<br></div>
<br></div><p></p></div>
            </div>
            <div class="p-b-2">
            <div class="book_chapter p-t-1" id="ch637373"><h3 class="text-center p-b-2">5.9. Operators</h3><p dir="ltr" style="text-align: left;"></p>
<table>
    <thead>
        <tr>
            <th>Description</th>
            <th>Operator</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>unary postfix</td>
            <td>
                <code><em>expr</em>++</code> &nbsp;&nbsp; <code><em>expr</em>--</code> &nbsp;&nbsp; <code>()</code> &nbsp;&nbsp; <code>[]</code> &nbsp;&nbsp; <code>.</code> &nbsp;&nbsp; <code>?.</code>
            </td>
        </tr>
        <tr>
            <td>unary prefix</td>
            <td>
                <code>-<em>expr</em></code> &nbsp;&nbsp; <code>!<em>expr</em></code> &nbsp;&nbsp; <code>~<em>expr</em></code> &nbsp;&nbsp; <code>++<em>expr</em></code> &nbsp;&nbsp; <code>--<em>expr</em></code> &nbsp;&nbsp;&nbsp;&nbsp; <code>await <em>expr</em></code>                &nbsp;&nbsp;</td>
        </tr>
        <tr>
            <td>multiplicative</td>
            <td>
                <code>*</code> &nbsp;&nbsp; <code>/</code> &nbsp;&nbsp; <code>%</code> &nbsp;<code>~/</code>
            </td>
        </tr>
        <tr>
            <td>additive</td>
            <td>
                <code>+</code> &nbsp;&nbsp; <code>-</code>
            </td>
        </tr>
        <tr>
            <td>shift</td>
            <td>
                <code>&lt;&lt;</code> &nbsp;&nbsp; <code>&gt;&gt;</code> &nbsp;&nbsp; <code>&gt;&gt;&gt;</code>
            </td>
        </tr>
        <tr>
            <td>bitwise AND</td>
            <td><code>&amp;</code></td>
        </tr>
        <tr>
            <td>bitwise XOR</td>
            <td><code>^</code></td>
        </tr>
        <tr>
            <td>bitwise OR</td>
            <td><code>|</code></td>
        </tr>
        <tr>
            <td>relational&nbsp;and&nbsp;type&nbsp;test</td>
            <td>
                <code>&gt;=</code> &nbsp;&nbsp; <code>&gt;</code> &nbsp;&nbsp; <code>&lt;=</code> &nbsp;&nbsp; <code>&lt;</code> &nbsp;&nbsp; <code>as</code> &nbsp;&nbsp; <code>is</code> &nbsp;&nbsp; <code>is!</code>
            </td>
        </tr>
        <tr>
            <td>equality</td>
            <td>
                <code>==</code> &nbsp;&nbsp; <code>!=</code> &nbsp;&nbsp;</td>
        </tr>
        <tr>
            <td>logical AND</td>
            <td><code>&amp;&amp;</code></td>
        </tr>
        <tr>
            <td>logical OR</td>
            <td><code>||</code></td>
        </tr>
        <tr>
            <td>if null</td>
            <td><code>??</code></td>
        </tr>
        <tr>
            <td>conditional</td>
            <td><code><em>expr1</em> ? <em>expr2</em> : <em>expr3</em></code></td>
        </tr>
        <tr>
            <td>cascade</td>
            <td>
                <code>..</code> &nbsp;&nbsp; <code>?..</code>
            </td>
        </tr>
        <tr>
            <td>assignment</td>
            <td>
                <code>=</code> &nbsp;&nbsp; <code>*=</code> &nbsp;&nbsp; <code>/=</code> &nbsp;&nbsp;<code>+=</code> &nbsp;&nbsp;<code>-=</code> &nbsp;&nbsp;<code>&amp;=</code> &nbsp;&nbsp;<code>^=</code> &nbsp;&nbsp;<em>etc.</em></td>
        </tr>
    </tbody>
</table>
<div><br></div>
<div>In the operator table, each operator has higher precedence than the
 operators in the rows that follow it. For example, the multiplicative 
operator % has higher precedence than (and thus executes before) the 
equality operator ==, which has higher precedence
    than the logical AND operator &amp;&amp;. That precedence means that
 the following two lines of code execute the same way:</div>
<p></p>
<p dir="ltr" style="text-align: left;"></p>
<p></p>
<!-- HTML generated using hilite.me --><div style="background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;"><pre style="margin: 0; line-height: 125%"><span style="color: #888888">// Parentheses improve readability.</span>
<span style="color: #008800; font-weight: bold">if</span> ((n <span style="color: #333333">%</span> i <span style="color: #333333">==</span> <span style="color: #6600EE; font-weight: bold">0</span>) <span style="color: #333333">&amp;&amp;</span> (d <span style="color: #333333">%</span> i <span style="color: #333333">==</span> <span style="color: #6600EE; font-weight: bold">0</span>)) ...

<span style="color: #888888">// Harder to read, but equivalent.</span>
<span style="color: #008800; font-weight: bold">if</span> (n <span style="color: #333333">%</span> i <span style="color: #333333">==</span> <span style="color: #6600EE; font-weight: bold">0</span> <span style="color: #333333">&amp;&amp;</span> d <span style="color: #333333">%</span> i <span style="color: #333333">==</span> <span style="color: #6600EE; font-weight: bold">0</span>) ...
</pre></div>

<p dir="ltr" style="text-align: left;"><br></p><p dir="ltr" style="text-align: left;"></p><p dir="ltr"></p>
<div>
    <h4>Source</h4>
</div>
<div>[1] <a href="https://dart.dev/guides/language/language-tour#booleans">https://dart.dev/guides/language/language-tour#operators</a> (<a href="https://creativecommons.org/licenses/by/4.0/">CC&nbsp;BY&nbsp;4.0</a>)<br></div>
<br><p></p></div>
            </div>
            <div class="p-b-2">
            <div class="book_chapter p-t-1" id="ch637218"><h3 class="text-center p-b-2">5.10. Functions</h3><div style="text-align: left;">
            <h5><br></h5>Dart is a true object-oriented language, so 
even functions are objects and have a type, Function. This means that 
functions can be assigned to variables or passed as arguments to other 
functions.</div>

        <div style="text-align: left;">For functions that contain just one expression, you can use a shorthand syntax: <br></div>
        <div style="text-align: left;">The <code>=&gt; <em>expr</em></code> syntax is a shorthand for
            <code>{ return <em>expr</em>; }</code>. The <code>=&gt;</code> notation is sometimes referred to as <em>arrow</em> syntax.<br></div>
        <div style="text-align: left;"><br></div>
        <div style="text-align: center;"><iframe style="width:750px;height:550px;" src="Week%208%20Lecture%20Workbook_files/embed-inline_009.htm"></iframe></div>
    <div style="text-align: left;"><strong>Note:</strong> Only an <em>expression</em>—not a <em>statement</em>—can appear between the arrow (=&gt;) and the semicolon (;). For example, you can’t put an <a href="https://dart.dev/guides/language/language-tour#if-and-else">if statement</a>        there, but you can use a <a href="https://dart.dev/guides/language/language-tour#conditional-expressions">conditional expression</a>.</div>
    <div style="text-align: left;"><br></div>

    <div style="text-align: left;">
        <div>
            <h4><img src="Week%208%20Lecture%20Workbook_files/activity.png" alt="Activity Icon" role="presentation" width="50" height="50">&nbsp;Activity</h4>
        </div>
        <div>
            <div>Complete the codelab at the link below. This codelab is
 focused on the main differences between Java and Dart, allowing you to 
quickly overcome the differences between Java and Dart in realtime.<br></div>
        </div>
    </div>
    <div style="text-align: left;"><a href="https://codelabs.developers.google.com/codelabs/from-java-to-dart/" target="_blank">https://codelabs.developers.google.com/codelabs/from-java-to-dart/</a></div><div style="text-align: left;"><h4><br></h4></div><div style="text-align: left;"><h4>Source</h4></div><div style="text-align: left;">[1] <a href="https://dart.dev/guides/language/language-tour#functions" target="_blank">https://dart.dev/guides/language/language-tour#functions</a> (<a href="https://creativecommons.org/licenses/by/4.0/">CC&nbsp;BY&nbsp;4.0</a>)<br></div>
    <div style="text-align: left;"><br></div></div>
            </div>
            <div class="p-b-2">
            <div class="book_chapter p-t-1" id="ch633802"><h2 class="text-center p-b-2">6. Flutter Widgets</h2><p dir="ltr" style="text-align: left;">So what do widgets do in Flutter?, well essentially widgets are Flutter! <br></p><p dir="ltr" style="text-align: left;">Flutter widgets are built using a modern framework that takes
inspiration from <a href="https://reactjs.org/">React</a>. The central idea is that you build
your UI out of widgets. Widgets describe what their view
should look like given their current configuration and state. [1]</p><h4>Basic widgets<br></h4><p dir="ltr" style="text-align: left;">Flutter comes with a suite of powerful basic widgets, of which the following are commonly used:<br><br></p><div style="margin-left: 30px;" class="editor-indent"><ul><li>Text - The Text widget lets you create a run of styled text within your application.</li><li>Row,
 Column - These flex widgets let you create flexible layouts in both the
 horizontal (Row) and vertical (Column) directions. The design of these 
objects is based on the web’s flexbox layout model.</li><li>Stack - 
Instead of being linearly oriented (either horizontally or vertically), a
 Stack widget lets you place widgets on top of each other in paint 
order. You can then use the Positioned widget on children of a Stack to 
position them relative to the top, right, bottom, or left edge of the 
stack. Stacks are based on the web’s absolute positioning layout model.</li><li>Container
 - The Container widget lets you create a rectangular visual element. A 
container can be decorated with a BoxDecoration, such as a background, a
 border, or a shadow. A Container can also have margins, padding, and 
constraints applied to its size. In addition, a Container can be 
transformed in three dimensional space using a matrix.[1]</li></ul></div><p dir="ltr" style="text-align: left;"></p><h4><img src="Week%208%20Lecture%20Workbook_files/reading1.png" alt="" role="presentation" width="50" height="50">&nbsp;Reading</h4><p></p><p dir="ltr" style="text-align: left;">Please visit the Flutter documentation via the below and have a look at the basic widgets required to create flutter apps. <br></p><p dir="ltr" style="text-align: left;"><a href="https://flutter.dev/docs/development/ui/widgets/basics" target="_blank">https://flutter.dev/docs/development/ui/widgets/basics</a><br></p><h4 dir="ltr" style="text-align: left;"><br></h4><h4 dir="ltr" style="text-align: left;">Stateless Widget</h4><p dir="ltr" style="text-align: left;">A
 Stateless Widget (StatelessWidget class) widget is immutable. Once it's
 created, it can't be changed. It doesn't preserve its state. A 
stateless widget is created only once, and it cannot be rebuild at a 
later time. Stateless widget's ' build()' method is called only once. 
[2]</p><p dir="ltr" style="text-align: center;"><strong>Examples</strong></p><p dir="ltr" style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/Statelesswidget.svg" alt="stateless widget" class="img-responsive atto_image_button_text-bottom" width="451" height="211"><br></p><p dir="ltr" style="text-align: left;">Watch the video below to learn how to create a Stateless widget from scratch.</p><p dir="ltr" style="text-align: left;"><img src="Week%208%20Lecture%20Workbook_files/video2.png" alt="" role="presentation" width="50" height="50"> <a href="https://youtu.be/wE7khGHVkYY" target="_blank">https://youtu.be/wE7khGHVkYY</a> [3]<br></p><p dir="ltr" style="text-align: left;"><br></p><h4 dir="ltr" style="text-align: left;">Stateful Widget <br></h4><p dir="ltr" style="text-align: left;">A widget that has <span class="atto-styles-highlight-yellow">mutable state</span>.<br>State
 is information that (1) can be read synchronously when the widget is 
built and (2) might change during the lifetime of the widget. It is the 
responsibility of the widget implementer to ensure that the State is 
promptly notified when such state changes, using State.setState.</p><p dir="ltr" style="text-align: center;"><strong>Examples</strong></p><p dir="ltr" style="text-align: center;"><strong></strong><img src="Week%208%20Lecture%20Workbook_files/Statefulwidget.svg" alt="stateful widgets" width="451" height="211"><br></p><p dir="ltr" style="text-align: left;"></p><p dir="ltr"><br></p><p dir="ltr">Please watch the video below to learn how to create a Stateful widget and when to use it.<br></p><p dir="ltr"><img src="Week%208%20Lecture%20Workbook_files/video2.png" alt="" role="presentation" width="50" height="50"> <a href="https://youtu.be/AqCMFXEmf3w" target="_blank">https://youtu.be/AqCMFXEmf3w</a></p><div><br></div><div><h4 dir="ltr"><img src="Week%208%20Lecture%20Workbook_files/folder.png" alt="" role="presentation" width="50" height="50"> Resources</h4></div><div><a href="https://flutter.dev/docs/development/ui/widgets" target="_blank">Flutter Widget Catalog</a><br></div><div><br></div><p></p><h4 dir="ltr" style="text-align: left;">Source</h4><p dir="ltr" style="text-align: left;">[1] <a href="https://flutter.dev/docs/development/ui/widgets-intro" class="_blanktarget">https://flutter.dev/docs/development/ui/widgets-intro</a> (<a rel="license" href="https://creativecommons.org/licenses/by/4.0">Creative
            Commons Attribution 4.0 International License</a>)</p><p dir="ltr" style="text-align: left;">[2] Tyagi, Priyanka. <i>Pragmatic Flutter : Building Cross-Platform Mobile Apps for Android, IOS, Web and Desktop</i>, Taylor &amp; Francis Group, 2021.<i> ProQuest Ebook Central</i>, <a href="https://ebookcentral-proquest-com.ez.library.latrobe.edu.au/lib/latrobe/detail.action?docID=6646894">https://ebookcentral-proquest-com.ez.library.latrobe.edu.au/lib/latrobe/detail.action?docID=6646894</a>.</p><p dir="ltr" style="text-align: left;">[3] <a href="https://youtu.be/wE7khGHVkYY" class="_blanktarget">https://youtu.be/wE7khGHVkYY</a></p><p dir="ltr" style="text-align: left;">[4] <a href="https://youtu.be/AqCMFXEmf3w" target="_blank">https://youtu.be/AqCMFXEmf3w</a><br></p><p dir="ltr" style="text-align: left;"><br></p><p dir="ltr" style="text-align: left;"><br></p><p dir="ltr" style="text-align: left;"><br></p></div>
            </div>
            <div class="p-b-2">
            <div class="book_chapter p-t-1" id="ch633801"><h2 class="text-center p-b-2">7. Flutter Layout</h2><p dir="ltr" style="text-align: left;"></p><p>The core of Flutter’s layout mechanism is widgets. In Flutter, almost
everything is a widget—even layout models are widgets.
The images, icons, and text that you see in a Flutter app  are all widgets.
But things you don’t see are also widgets, such as the rows, columns,
and grids that arrange, constrain, and align the visible widgets.</p>

<p>You create a layout by composing widgets to build more complex widgets.
For example, the first screenshot below shows 3 icons with a label
under each one:</p>

<div>
  <div style="text-align: center;">
    <img src="Week%208%20Lecture%20Workbook_files/lakes-icons.png" alt="Sample layout">&nbsp;
  </div>
</div>

<p><br></p><p>The second screenshot displays the visual layout, showing a row of
3 columns where each column contains an icon and a label.</p><div style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/lakes-icons-visual.png" alt="Sample layout with visual debugging"></div><div style="text-align: center;"><br></div><div style="text-align: left;"><p>Here’s a diagram of the widget tree for this UI:</p>

<p style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/sample-flutter-layout.png" alt="Node tree"></p>

<p>Most of this should look as you might expect, but you might be wondering
about the containers (shown in pink). <a href="https://api.flutter.dev/flutter/widgets/Container-class.html"><code>Container</code></a> is a widget class
that allows you to customize its child widget. Use a <code>Container</code> when
you want to add padding, margins, borders, or background color,
to name some of its capabilities. In this example, each <a href="https://api.flutter.dev/flutter/widgets/Text-class.html"><code>Text</code></a> widget is placed in a <code>Container</code>
to add margins. The entire <a href="https://api.flutter.dev/flutter/widgets/Row-class.html"><code>Row</code></a> is also placed in a
<code>Container</code> to add padding around the row.</p><p><br></p><p></p><h4><img src="Week%208%20Lecture%20Workbook_files/folder.png" alt="" role="presentation" width="50" height="50"> Resources</h4><div>For further clarification and some hands on coding undertake the UI tutorial at <a href="https://flutter.dev/docs/development/ui/layout/tutorial">https://flutter.dev/docs/development/ui/layout/tutorial</a><br></div><div>Layout widgets library <a href="https://flutter.dev/docs/development/ui/widgets/layout" target="_blank">https://flutter.dev/docs/development/ui/widgets/layout</a><br></div><br><p></p></div><p></p></div>
            </div>
            <div class="p-b-2">
            <div class="book_chapter p-t-1" id="ch633803"><h2 class="text-center p-b-2">8. Flutter Lab Activity</h2><p dir="ltr" style="text-align: left;">In
 this lab we are going to create the same camera&nbsp; app in both 
Android and Flutter so we can compare the two frameworks approach.</p>
<p dir="ltr" style="text-align: left;">A. Firstly you will need to install the Flutter plugin into your Android Studio Environment using the methods below;<br></p>
<p dir="ltr" style="text-align: left;"></p>
<div style="margin-left: 30px;" class="editor-indent">
    <h5 id="mac">Mac</h5>
    <p>Use the following instructions for macos:</p>
    <ol>
        <li>Start Android Studio.</li>
        <li>Open plugin preferences (<strong>Preferences &gt; Plugins</strong>&nbsp;as of v3.6.3.0 or later).</li>
        <li>Select the Flutter plugin and click&nbsp;<strong>Install</strong>.</li>
        <li>Click&nbsp;<strong>Yes</strong>&nbsp;when prompted to install the Dart plugin.</li>
        <li>Click&nbsp;<strong>Restart</strong>&nbsp;when prompted.</li>
    </ol>
    <h5 id="linux-or-windows">Linux or Windows</h5>
    <p>Use the following instructions for Linux or WIndows:</p>
    <ol>
        <li>Open plugin preferences (<strong>File &gt; Settings &gt; Plugins</strong>).</li>
        <li>Select&nbsp;<strong>Marketplace</strong>, select the Flutter plugin and click&nbsp;<strong>Install</strong>.</li>
    </ol>
</div>
<div>B. Now I would recommend testing your environment set-up. <br></div>
<div style="margin-left: 30px;" class="editor-indent">
    <div>
        <ol>
            <li>To do so we will create the default starter Flutter app by selecting "New Flutter Project"</li>
        </ol>
        <div style="margin-left: 30px;" class="editor-indent">
            <div style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/image.png" alt="" role="presentation" width="50%"></div>
        </div>
    </div>
    <div style="margin-left: 30px;" class="editor-indent">
        <div><br></div>
        <div style="text-align: left;">2. Verify the Flutter SDK path specifies the SDK’s location (select&nbsp;<strong>Install SDK…</strong>&nbsp;if the text field is blank).<br>3. Enter a project name (for example,&nbsp;<code>myapp</code>). Make sure the Android Language is set to
            Java. Then click&nbsp;<strong>Next</strong>.</div>
        <div style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/image%2525201_003.png" alt="" role="presentation" width="50%"><br></div>
        <div style="text-align: left;">4. Click&nbsp;<strong>Finish</strong>.<br>5. Wait for Android Studio to install the SDK and create the project.</div>
        <div style="text-align: left;"><br></div>
    </div>
</div>
<div style="text-align: left;">C. Now we want to run the app</div>
<div style="text-align: left;">
    <div style="margin-left: 30px;" class="editor-indent">
        <ol>
            <li>Locate the main Android Studio toolbar:<br>
                <div style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/main-toolbar.png" alt="Main IntelliJ toolbar" width="50%"></div>
            </li>
            <li>In the&nbsp;<strong>target selector</strong>, select an Android device for running the app. If none are listed as available, select&nbsp;<strong>Tools &gt; AVD Manager</strong>&nbsp;and create one there. For details, see&nbsp;<a href="https://developer.android.com/studio/run/managing-avds">Managing AVDs</a>.</li>
            <li>Click the run icon in the toolbar, or invoke the menu item&nbsp;<strong>Run &gt; Run</strong>. After the app build completes, you’ll see the starter app on your device.</li>
        </ol>
        <div style="margin-left: 30px;" class="editor-indent"><span class="atto-styles-highlight-yellow">Troubleshooting: At this point some people may receive the message below </span><br>
            <div style="margin-left: 30px;" class="editor-indent">
                <!-- HTML generated using hilite.me -->
                <div style="background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .4em;">
                    <pre style="margin: 10; line-height: 125%"><span style="color: #997700; font-weight: bold">ERROR:</span> JAVA_HOME is not set and no <span style="color: #FF0000; background-color: #FFAAAA">"</span>java<span style="color: #FF0000; background-color: #FFAAAA">'</span> command could be found in your PATH<span style="color: #333333">.</span>

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation<span style="color: #333333">.</span>
</pre>
                </div>
            </div>
            Download and install the Java JDK from Oracle <a href="https://docs.oracle.com/en/java/javase/16/install/overview-jdk-installation.html#" class="_blanktarget">https://docs.oracle.com/en/java/javase/16/install/overview-jdk-installation.html#</a>
            <p>After installing the java add the JAVA_HOME in system environment variables by following these steps
            </p>
            <div style="margin-left: 30px;" class="editor-indent">
                <div style="margin-left: 30px;" class="editor-indent">
                    <ul>
                        <li>&nbsp;&nbsp;&nbsp; Open Search and type advanced system settings</li>
                        <li>&nbsp;&nbsp;&nbsp; In the shown options, select the View advanced system settings link</li>
                        <li>&nbsp;&nbsp;&nbsp; Under the Advanced tab, click Environment Variables</li>
                        <li>&nbsp;&nbsp;&nbsp; In the System variables section, click New (or User variables for single user setting)</li>
                        <li>&nbsp;&nbsp;&nbsp; Set JAVA_HOME as the Variable name and the path to the JDK installation as the Variable value and click OK</li>
                        <li>&nbsp;&nbsp;&nbsp; Click OK and click Apply to apply the changes</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>D. Now your app should run successfully <br></div>
<div style="text-align: left;">
    <div style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/image%25205.png" alt="" role="presentation"><br></div><br></div>
<div style="text-align: left;">E. Now we are ready to import the Camera 
App from Github, if you are unsure how to clone a repository into 
android studio please look at the video <a href="https://echo360.net.au/media/bbb86979-422b-4cd4-9b55-f4b4294e35df/public" target="_blank">here</a></div>
<div style="text-align: left;">
    <div style="margin-left: 30px;" class="editor-indent">
        <div style="margin-left: 30px;" class="editor-indent">
            <div style="text-align: left;">1. Clone the github repository containing the Flutter App is <a href="https://github.com/latrobe-cs-educator/CSE3MAD_lab11partB_flutter_cameraapp" target="_blank">https://github.com/latrobe-cs-educator/CSE3MAD_lab11partB_flutter_cameraapp</a></div>
            <div style="text-align: left;">2. Run this app as you did in
 task C, you should have an app that runs using the emulated camera, 
press Alt and use your mouse to change your view. <br></div>
        <div style="text-align: left;">3. Click on the button, image you have just captured will now display on the screen. <br></div>
        <div style="text-align: left;">4. If you have an android phone try&nbsp; installing it there.</div>
        <div style="text-align: left;"><br></div>
    </div>
    </div>
    <div style="text-align: left;">F.&nbsp; Now lets have a look at the project.</div>
    <div style="margin-left: 30px;" class="editor-indent">
        <div style="margin-left: 30px;" class="editor-indent">
            <div style="text-align: left;">1. To view the dart code, go into to project view as below and&nbsp; look in lib&nbsp; &gt; main.dart</div>
            <div style="text-align: left;">2. To view dependencies open 
pubspec.yaml, this is similar to our Androids gradle file outlining 
versions, app data and dependencies.</div>
            <div style="text-align: left;">3. There are also Android and IOS directories for those times that native code/API's are still required. <br></div>
            <div style="text-align: left;">4. For a full code run through view <a href="https://flutter.dev/docs/cookbook/plugins/picture-using-camera" class="_blanktarget">https://flutter.dev/docs/cookbook/plugins/picture-using-camera</a><br></div>
            <div style="text-align: left;"><br></div>
        </div>
    </div>
    <div style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/mainImg.png" alt="Flutter code" class="img-responsive atto_image_button_text-bottom" width="800" height="437"><br></div><br></div>
    <div style="text-align: left;">G. Now lets clone the android version of the app from <a href="https://github.com/latrobe-cs-educator/CSE3MAD_lab11partA_android_cameraapp" target="_blank">https://github.com/latrobe-cs-educator/CSE3MAD_lab11partA_android_cameraapp</a></div>
    <div style="text-align: left;"><br></div>
    <div style="text-align: left;">H. Run the Android app, if you get an&nbsp; error true using a separate AVD to the one you are running your Flutter app on. <br></div>
    <div style="text-align: center;"><img src="Week%208%20Lecture%20Workbook_files/image%25206.png" alt="" role="presentation" width="800"><br></div>
    <div style="text-align: left;"><br></div><div style="text-align: left;">I. Now have a look at both your code bases and compare the following;</div><div style="margin-left: 30px;" class="editor-indent"><div style="margin-left: 30px;" class="editor-indent"><div style="text-align: left;"><ul><li> Try to match the button press, image capture and display events.</li><li>How
 large are the respective code bases? Note that although there may be 
more files in Flutter, the code that you need to create for this app is 
basically all either in the main.dart file or the camera, path and 
path_provider dependencies added in the pubspec.yaml file.</li><li>Did you have to explicitly code the permission requests in Flutter?</li><li>Does Flutter require and Activity for each screen?</li><li>The lack of Layout(XML resource files) files in Flutter.</li><li>What other differences can you see? Please post them in the lab chat so we can all see the differences. <br></li></ul></div></div></div><div style="text-align: left;"><br></div><div style="text-align: left;"><br></div>
    <div style="text-align: left;"><br>
        <div style="margin-left: 30px;" class="editor-indent">
            <ol>
            </ol>
        </div><br></div>
    <div style="margin-left: 30px;" class="editor-indent">
        <div style="margin-left: 30px;" class="editor-indent">
        </div>
    </div>
    <div style="margin-left: 30px;" class="editor-indent">
        <div style="margin-left: 30px;" class="editor-indent">
            <div style="text-align: left;"><br></div>
        </div>
    </div><br>
    <p></p></div>
            </div>
    </div>
</div></div>
    </div>
</div>
<script>
//<![CDATA[
var require = {
    baseUrl : 'https://lms.latrobe.edu.au/lib/requirejs.php/1632949907/',
    // We only support AMD modules with an explicit define() statement.
    enforceDefine: true,
    skipDataMain: true,
    waitSeconds : 0,

    paths: {
        jquery: 'https://lms.latrobe.edu.au/lib/javascript.php/1632949907/lib/jquery/jquery-3.5.1.min',
        jqueryui: 'https://lms.latrobe.edu.au/lib/javascript.php/1632949907/lib/jquery/ui-1.12.1/jquery-ui.min',
        jqueryprivate: 'https://lms.latrobe.edu.au/lib/javascript.php/1632949907/lib/requirejs/jquery-private'
    },

    // Custom jquery config map.
    map: {
      // '*' means all modules will get 'jqueryprivate'
      // for their 'jquery' dependency.
      '*': { jquery: 'jqueryprivate' },
      // Stub module for 'process'. This is a workaround for a bug in MathJax (see MDL-60458).
      '*': { process: 'core/first' },

      // 'jquery-private' wants the real jQuery module
      // though. If this line was not here, there would
      // be an unresolvable cyclic dependency.
      jqueryprivate: { jquery: 'jquery' }
    }
};

//]]>
</script>
<script src="Week%208%20Lecture%20Workbook_files/require.js"></script>
<script>
//<![CDATA[
M.util.js_pending("core/first");require(['core/first'], function() {
require(['core/prefetch']);
;
require(["media_videojs/loader"], function(loader) {
    loader.setUp(function(videojs) {
        videojs.options.flash.swf = "https://lms.latrobe.edu.au/media/player/videojs/videojs/video-js.swf";
videojs.addLanguage('en', {
  "Audio Player": "Audio Player",
  "Video Player": "Video Player",
  "Play": "Play",
  "Pause": "Pause",
  "Replay": "Replay",
  "Current Time": "Current Time",
  "Duration": "Duration",
  "Remaining Time": "Remaining Time",
  "Stream Type": "Stream Type",
  "LIVE": "LIVE",
  "Seek to live, currently behind live": "Seek to live, currently behind live",
  "Seek to live, currently playing live": "Seek to live, currently playing live",
  "Loaded": "Loaded",
  "Progress": "Progress",
  "Progress Bar": "Progress Bar",
  "progress bar timing: currentTime={1} duration={2}": "{1} of {2}",
  "Fullscreen": "Fullscreen",
  "Non-Fullscreen": "Non-Fullscreen",
  "Mute": "Mute",
  "Unmute": "Unmute",
  "Playback Rate": "Playback Rate",
  "Subtitles": "Subtitles",
  "subtitles off": "subtitles off",
  "Captions": "Captions",
  "captions off": "captions off",
  "Chapters": "Chapters",
  "Descriptions": "Descriptions",
  "descriptions off": "descriptions off",
  "Audio Track": "Audio Track",
  "Volume Level": "Volume Level",
  "You aborted the media playback": "You aborted the media playback",
  "A network error caused the media download to fail part-way.": "A network error caused the media download to fail part-way.",
  "The media could not be loaded, either because the server or network failed or because the format is not supported.": "The media could not be loaded, either because the server or network failed or because the format is not supported.",
  "The media playback was aborted due to a corruption problem or because the media used features your browser did not support.": "The media playback was aborted due to a corruption problem or because the media used features your browser did not support.",
  "No compatible source was found for this media.": "No compatible source was found for this media.",
  "The media is encrypted and we do not have the keys to decrypt it.": "The media is encrypted and we do not have the keys to decrypt it.",
  "Play Video": "Play Video",
  "Close": "Close",
  "Close Modal Dialog": "Close Modal Dialog",
  "Modal Window": "Modal Window",
  "This is a modal window": "This is a modal window",
  "This modal can be closed by pressing the Escape key or activating the close button.": "This modal can be closed by pressing the Escape key or activating the close button.",
  ", opens captions settings dialog": ", opens captions settings dialog",
  ", opens subtitles settings dialog": ", opens subtitles settings dialog",
  ", opens descriptions settings dialog": ", opens descriptions settings dialog",
  ", selected": ", selected",
  "captions settings": "captions settings",
  "subtitles settings": "subtitles settings",
  "descriptions settings": "descriptions settings",
  "Text": "Text",
  "White": "White",
  "Black": "Black",
  "Red": "Red",
  "Green": "Green",
  "Blue": "Blue",
  "Yellow": "Yellow",
  "Magenta": "Magenta",
  "Cyan": "Cyan",
  "Background": "Background",
  "Window": "Window",
  "Transparent": "Transparent",
  "Semi-Transparent": "Semi-Transparent",
  "Opaque": "Opaque",
  "Font Size": "Font Size",
  "Text Edge Style": "Text Edge Style",
  "None": "None",
  "Raised": "Raised",
  "Depressed": "Depressed",
  "Uniform": "Uniform",
  "Dropshadow": "Dropshadow",
  "Font Family": "Font Family",
  "Proportional Sans-Serif": "Proportional Sans-Serif",
  "Monospace Sans-Serif": "Monospace Sans-Serif",
  "Proportional Serif": "Proportional Serif",
  "Monospace Serif": "Monospace Serif",
  "Casual": "Casual",
  "Script": "Script",
  "Small Caps": "Small Caps",
  "Reset": "Reset",
  "restore all settings to the default values": "restore all settings to the default values",
  "Done": "Done",
  "Caption Settings Dialog": "Caption Settings Dialog",
  "Beginning of dialog window. Escape will cancel and close the window.": "Beginning of dialog window. Escape will cancel and close the window.",
  "End of dialog window.": "End of dialog window.",
  "{1} is loading.": "{1} is loading.",
  "Exit Picture-in-Picture": "Exit Picture-in-Picture",
  "Picture-in-Picture": "Picture-in-Picture"
});

    });
});;

M.util.js_pending('theme_boost/loader');
require(['theme_boost/loader'], function() {
  M.util.js_complete('theme_boost/loader');
});
;
M.util.js_pending('core/notification'); require(['core/notification'], function(amd) {amd.init(6855273, []); M.util.js_complete('core/notification');});;
M.util.js_pending('core/log'); require(['core/log'], function(amd) {amd.setConfig({"level":"warn"}); M.util.js_complete('core/log');});;
M.util.js_pending('core/page_global'); require(['core/page_global'], function(amd) {amd.init(); M.util.js_complete('core/page_global');});M.util.js_complete("core/first");
});
//]]>
</script>
<script>
//<![CDATA[
M.str = {"moodle":{"lastmodified":"Last modified","name":"Name","error":"Error","info":"Information","yes":"Yes","no":"No","ok":"OK","cancel":"Cancel","confirm":"Confirm","areyousure":"Are you sure?","closebuttontitle":"Close","unknownerror":"Unknown error","file":"File","url":"URL"},"repository":{"type":"Type","size":"Size","invalidjson":"Invalid JSON string","nofilesattached":"No files attached","filepicker":"File picker","logout":"Logout","nofilesavailable":"No files available","norepositoriesavailable":"Sorry, none of your current repositories can return files in the required format.","fileexistsdialogheader":"File exists","fileexistsdialog_editor":"A file with that name has already been attached to the text you are editing.","fileexistsdialog_filemanager":"A file with that name has already been attached","renameto":"Rename to \"{$a}\"","referencesexist":"There are {$a} links to this file","select":"Select"},"admin":{"confirmdeletecomments":"You are about to delete comments, are you sure?","confirmation":"Confirmation"},"debug":{"debuginfo":"Debug info","line":"Line","stacktrace":"Stack trace"},"langconfig":{"labelsep":": "}};
//]]>
</script>
<script>
//<![CDATA[
(function() {Y.use("moodle-filter_glossary-autolinker",function() {M.filter_glossary.init_filter_autolinking({"courseid":0});
});
Y.use("moodle-filter_mathjaxloader-loader",function() {M.filter_mathjaxloader.configure({"mathjaxconfig":"MathJax.Hub.Config({\r\n    config: [\"TeX-MML-AM_CHTML.js\", \"Safe.js\"],\r\n    errorSettings: { message: [\"!\"] },\r\n    skipStartupTypeset: true,\r\n    messageStyle: \"none\"\r\n});\r\n","lang":"en"});
});
M.util.help_popups.setup(Y);
 M.util.js_pending('random6159ff64a07b92'); Y.on('domready', function() { M.util.js_complete("init");  M.util.js_complete('random6159ff64a07b92'); });
})();
//]]>
</script>


</body></html>